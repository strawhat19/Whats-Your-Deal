{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\massa\\\\OneDrive\\\\Desktop\\\\Coding\\\\Whats-Your-Deal\\\\src\\\\components\\\\StockBar\\\\stockbar.jsx\";\nimport React from 'react';\nimport \"./sass/stockbar.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Stockbar() {\n  // Declare constants-- touch marquee element\n  const marqueeElement = document.getElementById(`marqueeTest`); // Fetch with async function\n\n  async function stockListFetch() {\n    const response = await fetch(`https://financialmodelingprep.com/api/v3/available-traded/list?apikey=7e60778244bbb11a3e59192e565ed625`);\n    let stocklist = await response.json(); // Splice array for workable number\n\n    stocklist.splice(100); // For each company make a div add a class\n\n    stocklist.forEach((company, index, stockElement) => {\n      let profileURL = `https://stock-exchange-dot-full-stack-course-services.ew.r.appspot.com/api/v3/company/profile/${company.symbol}`; // fetch(profileURL)\n      //         .then((newResponse) => newResponse.json())\n      //         .then((profileData) => {\n      //         // Reinitializing Profile Array\n      //         profilesArray.push(profileData);\n      //         console.log(profilesArray)\n      //         profilesArray.forEach((company, index) => {\n      //           // Begin Profiles Array // Search Results Function\n      //             let plus = ``;\n      //             let condition = ``;\n      //             let symbol = company.symbol;\n      //             let image = company.profile.image;\n      //             let changes = company.profile.changes.toFixed(2);\n      //             let name = company.profile.companyName;\n      //             // Filtering for Price Increase or Decrease\n      //             if (changes >= 0) {\n      //               condition = `positive`;\n      //               plus = `+`;\n      //              }  else {\n      //               condition = `negative`;\n      //             }\n      //             // Creating Rows for Each Company\n      //             companyRow = document.createElement(`div`);\n      //             let companyImage = document.createElement(`img`); // Creating Image for Each Company\n      //             // Setting the Attributes of the Company Image\n      //             companyImage.setAttribute(`src`, image);\n      //             companyImage.setAttribute(`class`, `companyIcon`);\n      //             companyImage.setAttribute(`height`, `100px`);\n      //             companyImage.setAttribute(`width`, `100px`);\n      //             // Setting the Attributes of the Company Rows\n      //             companyRow.classList.add(`companyRow`);\n      //             // Creating a New Element to Contain Company Data\n      //             let companyElement = document.createElement(`a`);\n      //             companyElement.setAttribute(`href`,`./html/company.html?symbol=${symbol}`);\n      //             companyElement.classList.add(`çompanyElement`);\n      //             companyElement.setAttribute(`ìd`, index + 1);\n      //             companyElement.innerHTML = `\n      //             <span class=\"companyName\">${name}</span> \n      //             <span class=\"companySymbol\">(${symbol})</span>\n      //             <span class=\"companyChanges ${condition}\">(${plus}${changes})</span>\n      //             `; // Injecting the Elements we Created into the Rows\n      //             companyRow.prepend(companyImage);\n      //             companyRow.append(companyElement);\n      //             // Returning the Company Row\n      //             return companyRow;\n      //             // End Search Results Function\n      //           });\n      //           // Abstracted this code so it only appends rows on full word input\n      //           results.append(companyRow);\n      //           // Image Fixing\n      //           const images = document.querySelectorAll(`img`);\n      //           images.forEach(image => {\n      //             image.addEventListener(`error`,event => {\n      //               event.target.src=`../img/Stock-Icon-Circle-Icon.svg`;\n      //             })\n      //           })\n      //           // Highlighting Searched Text on Company Names\n      //           const companyNames = document.querySelectorAll(`.companyName`);\n      //           companyNames.forEach(name => {\n      //             let filteredCharacters = searchTerm.replace(/[.*+?^${}()|[\\]\\\\]/g,\"\\\\$&\");\n      //             let filter = new RegExp(`${filteredCharacters}`,`gi`);\n      //             name.innerHTML = name.textContent.replace(filter,match => `<mark>${match}</mark>`);\n      //           })\n      //           // Highlighting Searched Text on Company Symbols\n      //           const companySymbols = document.querySelectorAll(`.companySymbol`);\n      //           companySymbols.forEach(symbol => {\n      //             let filteredCharacters = searchTerm.replace(/[.*+?^${}()|[\\]\\\\]/g,\"\\\\$&\");\n      //             let filter = new RegExp(`${filteredCharacters}`,`gi`);\n      //             symbol.innerHTML = symbol.textContent.replace(filter,match => `<mark>${match}</mark>`);\n      //           })\n      //       });\n\n      stockElement = document.createElement(`div`);\n      stockElement.classList.add(`stockElement`); // Add symbol with a price\n\n      let companyElement = document.createElement(`a`);\n      let companyImage = document.createElement(`img`); // Creating Image for Each Company\n      // Setting the Attributes of the Company Image\n\n      companyImage.setAttribute(`src`, company);\n      companyImage.setAttribute(`class`, `companyIcon`);\n      companyImage.setAttribute(`height`, `100px`);\n      companyImage.setAttribute(`width`, `100px`);\n      companyElement.setAttribute(`href`, `./html/company.html?symbol=${company.symbol}`);\n      companyElement.classList.add(`companyElement`);\n      companyElement.setAttribute(`ìd`, index + 1);\n      stockElement.innerHTML = `${company.symbol} <span class=\"positive\"> | ($${company.price})</span>`;\n      marqueeElement.classList.add(`marqueeAnim`);\n      companyElement.append(stockElement);\n      marqueeElement.append(companyElement);\n    });\n  }\n\n  stockListFetch();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"outerMarquee marqueeAnim\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"newTesting\",\n      id: \"marqueeTest\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 127,\n    columnNumber: 9\n  }, this);\n}\n\n_c = Stockbar;\nexport default Stockbar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Stockbar\");","map":{"version":3,"sources":["C:/Users/massa/OneDrive/Desktop/Coding/Whats-Your-Deal/src/components/StockBar/stockbar.jsx"],"names":["React","Stockbar","marqueeElement","document","getElementById","stockListFetch","response","fetch","stocklist","json","splice","forEach","company","index","stockElement","profileURL","symbol","createElement","classList","add","companyElement","companyImage","setAttribute","innerHTML","price","append"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,qBAAP;;;AAEA,SAASC,QAAT,GAAoB;AAEhB;AACA,QAAMC,cAAc,GAAGC,QAAQ,CAACC,cAAT,CAAyB,aAAzB,CAAvB,CAHgB,CAKhB;;AACA,iBAAeC,cAAf,GAAgC;AAChC,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CACvB,wGADuB,CAA5B;AAGA,QAAIC,SAAS,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAtB,CAJgC,CAKhC;;AACAD,IAAAA,SAAS,CAACE,MAAV,CAAiB,GAAjB,EANgC,CAQhC;;AACAF,IAAAA,SAAS,CAACG,OAAV,CAAkB,CAACC,OAAD,EAAUC,KAAV,EAAiBC,YAAjB,KAAkC;AAChD,UAAIC,UAAU,GAAI,iGAAgGH,OAAO,CAACI,MAAO,EAAjI,CADgD,CAEhD;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AACAF,MAAAA,YAAY,GAAGX,QAAQ,CAACc,aAAT,CAAwB,KAAxB,CAAf;AACAH,MAAAA,YAAY,CAACI,SAAb,CAAuBC,GAAvB,CAA4B,cAA5B,EAvFgD,CAwFhD;;AACA,UAAIC,cAAc,GAAGjB,QAAQ,CAACc,aAAT,CAAwB,GAAxB,CAArB;AACA,UAAII,YAAY,GAAGlB,QAAQ,CAACc,aAAT,CAAwB,KAAxB,CAAnB,CA1FgD,CA0FE;AAClD;;AACAI,MAAAA,YAAY,CAACC,YAAb,CAA2B,KAA3B,EAAiCV,OAAjC;AACAS,MAAAA,YAAY,CAACC,YAAb,CAA2B,OAA3B,EAAoC,aAApC;AACAD,MAAAA,YAAY,CAACC,YAAb,CAA2B,QAA3B,EAAqC,OAArC;AACAD,MAAAA,YAAY,CAACC,YAAb,CAA2B,OAA3B,EAAoC,OAApC;AACAF,MAAAA,cAAc,CAACE,YAAf,CAA6B,MAA7B,EAAoC,8BAA6BV,OAAO,CAACI,MAAO,EAAhF;AACAI,MAAAA,cAAc,CAACF,SAAf,CAAyBC,GAAzB,CAA8B,gBAA9B;AACAC,MAAAA,cAAc,CAACE,YAAf,CAA6B,IAA7B,EAAkCT,KAAK,GAAG,CAA1C;AACAC,MAAAA,YAAY,CAACS,SAAb,GAA0B,GAAEX,OAAO,CAACI,MAAO,gCAA+BJ,OAAO,CAACY,KAAM,UAAxF;AACAtB,MAAAA,cAAc,CAACgB,SAAf,CAAyBC,GAAzB,CAA8B,aAA9B;AACAC,MAAAA,cAAc,CAACK,MAAf,CAAsBX,YAAtB;AACAZ,MAAAA,cAAc,CAACuB,MAAf,CAAsBL,cAAtB;AACH,KAvGD;AAwGC;;AAEDf,EAAAA,cAAc;AACd,sBACI;AAAK,IAAA,KAAK,EAAC,0BAAX;AAAA,2BACI;AAAK,MAAA,KAAK,EAAC,YAAX;AAAwB,MAAA,EAAE,EAAC;AAA3B;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;;KA/HQJ,Q;AAiIT,eAAeA,QAAf","sourcesContent":["import React from 'react';\r\nimport \"./sass/stockbar.css\";\r\n\r\nfunction Stockbar() {\r\n\r\n    // Declare constants-- touch marquee element\r\n    const marqueeElement = document.getElementById(`marqueeTest`);\r\n\r\n    // Fetch with async function\r\n    async function stockListFetch() {\r\n    const response = await fetch(\r\n        `https://financialmodelingprep.com/api/v3/available-traded/list?apikey=7e60778244bbb11a3e59192e565ed625`\r\n    );\r\n    let stocklist = await response.json();\r\n    // Splice array for workable number\r\n    stocklist.splice(100);\r\n\r\n    // For each company make a div add a class\r\n    stocklist.forEach((company, index, stockElement) => {\r\n        let profileURL = `https://stock-exchange-dot-full-stack-course-services.ew.r.appspot.com/api/v3/company/profile/${company.symbol}`;\r\n        // fetch(profileURL)\r\n        //         .then((newResponse) => newResponse.json())\r\n        //         .then((profileData) => {\r\n\r\n        //         // Reinitializing Profile Array\r\n        //         profilesArray.push(profileData);\r\n        //         console.log(profilesArray)\r\n        //         profilesArray.forEach((company, index) => {\r\n\r\n        //           // Begin Profiles Array // Search Results Function\r\n        //             let plus = ``;\r\n        //             let condition = ``;\r\n        //             let symbol = company.symbol;\r\n        //             let image = company.profile.image;\r\n        //             let changes = company.profile.changes.toFixed(2);\r\n        //             let name = company.profile.companyName;\r\n\r\n        //             // Filtering for Price Increase or Decrease\r\n        //             if (changes >= 0) {\r\n        //               condition = `positive`;\r\n        //               plus = `+`;\r\n        //              }  else {\r\n        //               condition = `negative`;\r\n        //             }\r\n                \r\n        //             // Creating Rows for Each Company\r\n        //             companyRow = document.createElement(`div`);\r\n        //             let companyImage = document.createElement(`img`); // Creating Image for Each Company\r\n        \r\n        //             // Setting the Attributes of the Company Image\r\n        //             companyImage.setAttribute(`src`, image);\r\n        //             companyImage.setAttribute(`class`, `companyIcon`);\r\n        //             companyImage.setAttribute(`height`, `100px`);\r\n        //             companyImage.setAttribute(`width`, `100px`);\r\n\r\n        //             // Setting the Attributes of the Company Rows\r\n        //             companyRow.classList.add(`companyRow`);\r\n\r\n        //             // Creating a New Element to Contain Company Data\r\n        //             let companyElement = document.createElement(`a`);\r\n        //             companyElement.setAttribute(`href`,`./html/company.html?symbol=${symbol}`);\r\n        //             companyElement.classList.add(`çompanyElement`);\r\n        //             companyElement.setAttribute(`ìd`, index + 1);\r\n        //             companyElement.innerHTML = `\r\n        //             <span class=\"companyName\">${name}</span> \r\n        //             <span class=\"companySymbol\">(${symbol})</span>\r\n        //             <span class=\"companyChanges ${condition}\">(${plus}${changes})</span>\r\n        //             `; // Injecting the Elements we Created into the Rows\r\n        //             companyRow.prepend(companyImage);\r\n        //             companyRow.append(companyElement);\r\n\r\n        //             // Returning the Company Row\r\n        //             return companyRow;\r\n        //             // End Search Results Function\r\n        //           });\r\n\r\n        //           // Abstracted this code so it only appends rows on full word input\r\n        //           results.append(companyRow);\r\n\r\n        //           // Image Fixing\r\n        //           const images = document.querySelectorAll(`img`);\r\n        //           images.forEach(image => {\r\n        //             image.addEventListener(`error`,event => {\r\n        //               event.target.src=`../img/Stock-Icon-Circle-Icon.svg`;\r\n        //             })\r\n        //           })\r\n\r\n        //           // Highlighting Searched Text on Company Names\r\n        //           const companyNames = document.querySelectorAll(`.companyName`);\r\n        //           companyNames.forEach(name => {\r\n        //             let filteredCharacters = searchTerm.replace(/[.*+?^${}()|[\\]\\\\]/g,\"\\\\$&\");\r\n        //             let filter = new RegExp(`${filteredCharacters}`,`gi`);\r\n        //             name.innerHTML = name.textContent.replace(filter,match => `<mark>${match}</mark>`);\r\n        //           })\r\n\r\n        //           // Highlighting Searched Text on Company Symbols\r\n        //           const companySymbols = document.querySelectorAll(`.companySymbol`);\r\n        //           companySymbols.forEach(symbol => {\r\n        //             let filteredCharacters = searchTerm.replace(/[.*+?^${}()|[\\]\\\\]/g,\"\\\\$&\");\r\n        //             let filter = new RegExp(`${filteredCharacters}`,`gi`);\r\n        //             symbol.innerHTML = symbol.textContent.replace(filter,match => `<mark>${match}</mark>`);\r\n        //           })\r\n\r\n        //       });\r\n        stockElement = document.createElement(`div`);\r\n        stockElement.classList.add(`stockElement`);\r\n        // Add symbol with a price\r\n        let companyElement = document.createElement(`a`);\r\n        let companyImage = document.createElement(`img`); // Creating Image for Each Company\r\n        // Setting the Attributes of the Company Image\r\n        companyImage.setAttribute(`src`, company);\r\n        companyImage.setAttribute(`class`, `companyIcon`);\r\n        companyImage.setAttribute(`height`, `100px`);\r\n        companyImage.setAttribute(`width`, `100px`);\r\n        companyElement.setAttribute(`href`,`./html/company.html?symbol=${company.symbol}`);\r\n        companyElement.classList.add(`companyElement`);\r\n        companyElement.setAttribute(`ìd`, index + 1);\r\n        stockElement.innerHTML = `${company.symbol} <span class=\"positive\"> | ($${company.price})</span>`;\r\n        marqueeElement.classList.add(`marqueeAnim`);\r\n        companyElement.append(stockElement)\r\n        marqueeElement.append(companyElement);\r\n    });\r\n    }\r\n\r\n    stockListFetch();\r\n    return (\r\n        <div class=\"outerMarquee marqueeAnim\">\r\n            <div class=\"newTesting\" id=\"marqueeTest\"></div>\r\n        </div>\r\n    );\r\n}\r\n \r\nexport default Stockbar;"]},"metadata":{},"sourceType":"module"}