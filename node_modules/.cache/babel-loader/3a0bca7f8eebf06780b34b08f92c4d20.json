{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\massa\\\\OneDrive\\\\Desktop\\\\Coding\\\\Whats-Your-Deal\\\\src\\\\components\\\\StockBar2\\\\stockbar2.jsx\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport \"./sass/stockbar2.css\";\nimport \"./css/customCSS.css\"; // Custom Stock Object\n// class Stock {\n//     constructor(name,symbol) {\n//         this.name = name;\n//         this.symbol = symbol;\n//     }\n//     logInfo() {\n//         Object.values(this).map(value => {\n//             console.log(value);\n//         })\n//     }\n// }\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Stockbar2 extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      loading: true,\n      stocks: [],\n      profiles: JSON.parse(localStorage.getItem(`Profiles List`)) || []\n    };\n  }\n\n  async componentDidMount(stockList, stockBar, stockElement, companyRow, companyImage, profileList) {\n    let profileArray = [];\n    const stockAPIURL = `https://financialmodelingprep.com/api/v3/available-traded/list?limit=100&apikey=7e60778244bbb11a3e59192e565ed625`;\n    const response = await fetch(stockAPIURL);\n    stockList = await response.json();\n    stockList.splice(100);\n    console.log(`Stock Data:`);\n    console.log(stockList);\n    this.setState({\n      stocks: stockList,\n      loading: false\n    });\n    this.setState({\n      profiles: JSON.parse(localStorage.getItem(`Profiles List`)),\n      loading: false\n    });\n    profileArray = JSON.parse(localStorage.getItem(`Profiles List`)) || [];\n    console.log(`Profile Data:`);\n    console.log(profileArray);\n  }\n\n  render() {\n    if (!this.state.stocks.length) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Didnt get Stocks\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 20\n      }, this);\n    }\n\n    if (this.state.loading) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 20\n      }, this);\n    }\n\n    const stockProfileBarRender = this.state.profiles.map((stockProfile, index) => {\n      let emptyString = `Nothing to Show`;\n      let stockProf = stockProfile.profile || emptyString;\n      let plus = ``;\n      let condition = ``;\n      let placeHolderImage = `https://raw.githubusercontent.com/strawhat19/Whats-Your-Deal/main/public/assets/Stock-Icon-Circle-Icon.png`;\n      let website = stockProf.website || emptyString;\n      let name = stockProf.companyName || emptyString;\n      let price = stockProf.price || emptyString;\n      let image = stockProf.image || placeHolderImage;\n      let address = stockProf.address || emptyString;\n      let ceo = stockProf.ceo || emptyString;\n      let changes = stockProf.changes || emptyString;\n      let changesPercentage = stockProf.changesPercentage || emptyString;\n      let country = stockProf.country || emptyString;\n      let currency = stockProf.currency || emptyString;\n      let industry = stockProf.industry || emptyString;\n      let description = stockProf.description || emptyString;\n      let exchange = stockProf.exchange || emptyString;\n      let fullTimeEmployees = stockProf.fullTimeEmployees || emptyString;\n      let sector = stockProf.sector || emptyString;\n      let city = stockProf.city || emptyString;\n      let state = stockProf.state || emptyString;\n      let zip = stockProf.zip || emptyString; // Filtering for Price Increase or Decrease\n\n      if (changes >= 0) {\n        condition = `positive`;\n        plus = `+`;\n      } else {\n        condition = `negative`;\n      }\n\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `companyElement profile-${index} ${stockProfile.symbol}`,\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          href: website,\n          target: \"_blank\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: `companySymbol ${stockProfile.symbol}`,\n            children: stockProfile.symbol\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: `companyChanges ${condition}`,\n            children: [\"($\", plus, \"$\", changes, \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"picture\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"companyIcon\",\n              src: image,\n              alt: \"Company Image\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 17\n        }, this)\n      }, `profile${index}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 13\n      }, this);\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"stockBar\",\n      className: `stockBar`,\n      children: stockProfileBarRender\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/massa/OneDrive/Desktop/Coding/Whats-Your-Deal/src/components/StockBar2/stockbar2.jsx"],"names":["React","ReactDOM","Stockbar2","Component","state","loading","stocks","profiles","JSON","parse","localStorage","getItem","componentDidMount","stockList","stockBar","stockElement","companyRow","companyImage","profileList","profileArray","stockAPIURL","response","fetch","json","splice","console","log","setState","render","length","stockProfileBarRender","map","stockProfile","index","emptyString","stockProf","profile","plus","condition","placeHolderImage","website","name","companyName","price","image","address","ceo","changes","changesPercentage","country","currency","industry","description","exchange","fullTimeEmployees","sector","city","zip","symbol"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport \"./sass/stockbar2.css\";\r\nimport \"./css/customCSS.css\";\r\n\r\n// Custom Stock Object\r\n// class Stock {\r\n//     constructor(name,symbol) {\r\n//         this.name = name;\r\n//         this.symbol = symbol;\r\n//     }\r\n\r\n//     logInfo() {\r\n//         Object.values(this).map(value => {\r\n//             console.log(value);\r\n//         })\r\n//     }\r\n// }\r\n\r\nexport default class Stockbar2 extends React.Component {\r\n\r\n    state = {\r\n        loading: true,\r\n        stocks: [],\r\n        profiles: JSON.parse(localStorage.getItem(`Profiles List`)) || []\r\n    }\r\n\r\n    async componentDidMount(stockList, stockBar, stockElement, companyRow, companyImage, profileList) {\r\n\r\n        let profileArray = [];\r\n\r\n        const stockAPIURL = `https://financialmodelingprep.com/api/v3/available-traded/list?limit=100&apikey=7e60778244bbb11a3e59192e565ed625`;\r\n        const response = await fetch(stockAPIURL);\r\n        stockList = await response.json();\r\n        stockList.splice(100);\r\n\r\n        console.log(`Stock Data:`);\r\n        console.log(stockList);\r\n        this.setState({ stocks : stockList, loading: false});\r\n        this.setState({ profiles: JSON.parse(localStorage.getItem(`Profiles List`)), loading: false});\r\n\r\n        profileArray = JSON.parse(localStorage.getItem(`Profiles List`)) || [];\r\n        console.log(`Profile Data:`);\r\n        console.log(profileArray);\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n        if (!this.state.stocks.length) {\r\n            return <div>Didnt get Stocks</div>\r\n        }\r\n        if (this.state.loading) {\r\n            return <div>Loading...</div>\r\n        }\r\n\r\n        const stockProfileBarRender = this.state.profiles.map((stockProfile,index) => {\r\n\r\n            let emptyString = `Nothing to Show`;\r\n            let stockProf = stockProfile.profile || emptyString;\r\n            let plus = ``;\r\n            let condition = ``;\r\n            let placeHolderImage = `https://raw.githubusercontent.com/strawhat19/Whats-Your-Deal/main/public/assets/Stock-Icon-Circle-Icon.png`;\r\n            let website = stockProf.website || emptyString;\r\n            let name = stockProf.companyName || emptyString;\r\n            let price = stockProf.price || emptyString;\r\n            let image = stockProf.image || placeHolderImage;\r\n            let address = stockProf.address || emptyString;\r\n            let ceo = stockProf.ceo || emptyString;\r\n            let changes = stockProf.changes || emptyString;\r\n            let changesPercentage = stockProf.changesPercentage || emptyString;\r\n            let country = stockProf.country || emptyString;\r\n            let currency = stockProf.currency || emptyString;\r\n            let industry = stockProf.industry || emptyString;\r\n            let description = stockProf.description || emptyString;\r\n            let exchange = stockProf.exchange || emptyString;\r\n            let fullTimeEmployees = stockProf.fullTimeEmployees || emptyString;\r\n            let sector = stockProf.sector || emptyString;\r\n            let city = stockProf.city || emptyString;\r\n            let state = stockProf.state || emptyString;\r\n            let zip = stockProf.zip || emptyString;\r\n\r\n            // Filtering for Price Increase or Decrease\r\n            if (changes >= 0) {\r\n                condition = `positive`;\r\n                plus = `+`;\r\n            }  else {\r\n                condition = `negative`;\r\n            }\r\n\r\n            return (\r\n            <div key={`profile${index}`}  className={`companyElement profile-${index} ${stockProfile.symbol}`}>\r\n                <a href={website} target=\"_blank\">\r\n                    <span className={`companySymbol ${stockProfile.symbol}`}>{stockProfile.symbol}</span>\r\n                    <span className={`companyChanges ${condition}`}>(${plus}${changes})</span>\r\n                    <div className=\"picture\">\r\n                        <img className=\"companyIcon\" src={image} alt=\"Company Image\"></img>\r\n                    </div>\r\n                </a>\r\n            </div>\r\n            )\r\n        });\r\n\r\n        return (\r\n            <div id=\"stockBar\" className={`stockBar`}>\r\n                {stockProfileBarRender}\r\n            </div>\r\n        )\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}