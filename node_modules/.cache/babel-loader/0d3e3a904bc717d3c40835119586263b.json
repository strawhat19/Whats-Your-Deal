{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\massa\\\\OneDrive\\\\Desktop\\\\Coding\\\\Whats-Your-Deal\\\\src\\\\components\\\\StockBar2\\\\stockbar2.jsx\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport \"./sass/stockbar2.css\";\nimport \"./css/customCSS.css\"; // Custom Stock Object\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Stock {\n  constructor(name, symbol) {\n    this.name = name;\n    this.symbol = symbol;\n  }\n\n  logInfo() {\n    Object.values(this).map(value => {\n      console.log(value);\n    });\n  }\n\n}\n\nexport default class Stockbar2 extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      loading: true,\n      stocks: [],\n      profiles: JSON.parse(localStorage.getItem(`Profiles List`)) || []\n    };\n  }\n\n  async componentDidMount(stockList, stockBar, stockElement, companyRow, companyImage, profileList) {\n    let profileArray = [];\n    const stockAPIURL = `https://financialmodelingprep.com/api/v3/available-traded/list?limit=100&apikey=7e60778244bbb11a3e59192e565ed625`;\n    const response = await fetch(stockAPIURL);\n    stockList = await response.json();\n    stockList.splice(100);\n    console.log(`Stock Data:`);\n    console.log(stockList);\n    this.setState({\n      stocks: stockList,\n      loading: false\n    });\n    this.setState({\n      profiles: JSON.parse(localStorage.getItem(`Profiles List`)),\n      loading: false\n    }); // stockList.map((company, index) => {\n    //     const stockProfileFetch = async () => {\n    //         const stockProfileFetchURL = `https://stock-exchange-dot-full-stack-course-services.ew.r.appspot.com/api/v3/company/profile/${company.symbol}`;\n    //         const response = await fetch(stockProfileFetchURL);\n    //         profileList = await response.json();\n    //         // profileArray.push(profileList);\n    //         localStorage.setItem(`Profiles List`, JSON.stringify(profileArray));\n    //     }\n    //     stockProfileFetch();\n    // })\n\n    profileArray = JSON.parse(localStorage.getItem(`Profiles List`)) || [];\n    console.log(`Profile Data:`);\n    console.log(profileArray); // profileArray.forEach((companyProfile, index) => {\n    //     // Begin Profiles Array // Search Results Function\n    //     let plus = ``;\n    //     let condition = ``;\n    //     let symbol = companyProfile.symbol;\n    //     let name = companyProfile.profile.companyName || `Stock API`;\n    //     let image = companyProfile.profile.image || `https://raw.githubusercontent.com/strawhat19/Whats-Your-Deal/main/public/assets/Stock-Icon-Circle-Icon.png`;\n    //     let changes = companyProfile.profile.changes;\n    //     // Filtering for Price Increase or Decrease\n    //     if (changes >= 0) {\n    //         condition = `positive`;\n    //         plus = `+`;\n    //     }  else {\n    //         condition = `negative`;\n    //     }\n    //     // Creating Rows for Each Company\n    //     companyRow = document.createElement(`div`);\n    //     // companyRow = React.createElement(`div`, {}, '');\n    //     companyImage = document.createElement(`img`); // Creating Image for Each Company\n    //     // Setting the Attributes of the Company Image\n    //     companyImage.setAttribute(`src`, image);\n    //     companyImage.setAttribute(`class`, `companyIcon`);\n    //     companyImage.setAttribute(`height`, `100px`);\n    //     companyImage.setAttribute(`width`, `100px`);\n    //     // Setting the Attributes of the Company Rows\n    //     companyRow.setAttribute(`class`, `companyRow`);\n    //     // Creating a New Element to Contain Company Data\n    //     let companyElement = document.createElement(`a`);\n    //     companyElement.setAttribute(`class`,`çompanyElement`);\n    //     companyElement.setAttribute(`ìd`, index + 1);\n    //     companyElement.setAttribute(`href`,`./html/company.html?symbol=${symbol}`);\n    //     companyElement.innerHTML = `\n    //     <span class=\"companyName\">${name}</span> \n    //     <span class=\"companySymbol\">(${symbol})</span>\n    //     <span class=\"companyChanges\">Hello</span>\n    //     <span class=\"companyChanges ${condition}\">(${plus}${changes})</span>\n    //     `;\n    //     // companyRow.prepend(companyImage);\n    //     companyRow.append(companyElement);\n    //     // Returning the Company Row\n    //     return companyRow;\n    // })\n  }\n\n  render() {\n    if (!this.state.stocks.length) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Didnt get Stocks\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 20\n      }, this);\n    }\n\n    if (this.state.loading) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 20\n      }, this);\n    } // const stockBarRender = this.state.stocks.map((stock,i) => {\n    //     return (\n    //     <div key={`stock${i}`}  className={`stock${i}`}>\n    //         <div className={`companyElement ${stock.name.toString()}`}>{stock.name.toString()}</div>\n    //     </div>\n    //     )\n    // });\n\n\n    const stockProfileBarRender = this.state.profiles.map((stockProfile, index) => {\n      let emptyString = `Nothing to Show`;\n      let stockProf = stockProfile.profile || emptyString;\n      let name = stockProf.companyName || emptyString;\n      let price = stockProf.price || emptyString;\n      let address = stockProf.address || emptyString;\n      let ceo = stockProf.ceo || emptyString;\n      let changes = stockProf.changes || emptyString;\n      let changesPercentage = stockProf.changesPercentage || emptyString;\n      let country = stockProf.country || emptyString;\n      let currency = stockProf.currency || emptyString;\n      let industry = stockProf.industry || emptyString;\n      let image = stockProf.image || emptyString;\n      let description = stockProf.description || emptyString;\n      let exchange = stockProf.exchange || emptyString;\n      let fullTimeEmployees = stockProf.fullTimeEmployees || emptyString;\n      let sector = stockProf.sector || emptyString;\n      let city = stockProf.city || emptyString;\n      let state = stockProf.state || emptyString;\n      let zip = stockProf.zip || emptyString; // console.log(stockProf);\n\n      console.log(price);\n      console.log(name); // let newStock = new Stock(stockProf.companyName,stockProfile.symbol);\n      // stockListNew.push(newStock);\n\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `companyElement profile-${index} ${stockProfile.symbol}`,\n        children: stockProfile.symbol\n      }, `profile${index}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 13\n      }, this);\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"stockBar\",\n      className: `stockBar ${this.state.profiles[97].symbol}`,\n      children: stockProfileBarRender\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/massa/OneDrive/Desktop/Coding/Whats-Your-Deal/src/components/StockBar2/stockbar2.jsx"],"names":["React","ReactDOM","Stock","constructor","name","symbol","logInfo","Object","values","map","value","console","log","Stockbar2","Component","state","loading","stocks","profiles","JSON","parse","localStorage","getItem","componentDidMount","stockList","stockBar","stockElement","companyRow","companyImage","profileList","profileArray","stockAPIURL","response","fetch","json","splice","setState","render","length","stockProfileBarRender","stockProfile","index","emptyString","stockProf","profile","companyName","price","address","ceo","changes","changesPercentage","country","currency","industry","image","description","exchange","fullTimeEmployees","sector","city","zip"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,sBAAP;AACA,OAAO,qBAAP,C,CAEA;;;;AACA,MAAMC,KAAN,CAAY;AACRC,EAAAA,WAAW,CAACC,IAAD,EAAMC,MAAN,EAAc;AACrB,SAAKD,IAAL,GAAYA,IAAZ;AACA,SAAKC,MAAL,GAAcA,MAAd;AACH;;AAEDC,EAAAA,OAAO,GAAG;AACNC,IAAAA,MAAM,CAACC,MAAP,CAAc,IAAd,EAAoBC,GAApB,CAAwBC,KAAK,IAAI;AAC7BC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH,KAFD;AAGH;;AAVO;;AAaZ,eAAe,MAAMG,SAAN,SAAwBb,KAAK,CAACc,SAA9B,CAAwC;AAAA;AAAA;AAAA,SAEnDC,KAFmD,GAE3C;AACJC,MAAAA,OAAO,EAAE,IADL;AAEJC,MAAAA,MAAM,EAAE,EAFJ;AAGJC,MAAAA,QAAQ,EAAEC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAsB,eAAtB,CAAX,KAAqD;AAH3D,KAF2C;AAAA;;AAQ5B,QAAjBC,iBAAiB,CAACC,SAAD,EAAYC,QAAZ,EAAsBC,YAAtB,EAAoCC,UAApC,EAAgDC,YAAhD,EAA8DC,WAA9D,EAA2E;AAE9F,QAAIC,YAAY,GAAG,EAAnB;AAEA,UAAMC,WAAW,GAAI,kHAArB;AACA,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACF,WAAD,CAA5B;AACAP,IAAAA,SAAS,GAAG,MAAMQ,QAAQ,CAACE,IAAT,EAAlB;AACAV,IAAAA,SAAS,CAACW,MAAV,CAAiB,GAAjB;AAEAxB,IAAAA,OAAO,CAACC,GAAR,CAAa,aAAb;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAYY,SAAZ;AACA,SAAKY,QAAL,CAAc;AAAEnB,MAAAA,MAAM,EAAGO,SAAX;AAAsBR,MAAAA,OAAO,EAAE;AAA/B,KAAd;AACA,SAAKoB,QAAL,CAAc;AAAElB,MAAAA,QAAQ,EAAEC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAsB,eAAtB,CAAX,CAAZ;AAA+DN,MAAAA,OAAO,EAAE;AAAxE,KAAd,EAZ8F,CAc9F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAc,IAAAA,YAAY,GAAGX,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAsB,eAAtB,CAAX,KAAqD,EAApE;AACAX,IAAAA,OAAO,CAACC,GAAR,CAAa,eAAb;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAYkB,YAAZ,EA3B8F,CA6B9F;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEH;;AAEDO,EAAAA,MAAM,GAAG;AAEL,QAAI,CAAC,KAAKtB,KAAL,CAAWE,MAAX,CAAkBqB,MAAvB,EAA+B;AAC3B,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACH;;AACD,QAAI,KAAKvB,KAAL,CAAWC,OAAf,EAAwB;AACpB,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACH,KAPI,CASL;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,UAAMuB,qBAAqB,GAAG,KAAKxB,KAAL,CAAWG,QAAX,CAAoBT,GAApB,CAAwB,CAAC+B,YAAD,EAAcC,KAAd,KAAwB;AAC1E,UAAIC,WAAW,GAAI,iBAAnB;AACA,UAAIC,SAAS,GAAGH,YAAY,CAACI,OAAb,IAAwBF,WAAxC;AACA,UAAItC,IAAI,GAAGuC,SAAS,CAACE,WAAV,IAAyBH,WAApC;AACA,UAAII,KAAK,GAAGH,SAAS,CAACG,KAAV,IAAmBJ,WAA/B;AACA,UAAIK,OAAO,GAAGJ,SAAS,CAACI,OAAV,IAAqBL,WAAnC;AACA,UAAIM,GAAG,GAAGL,SAAS,CAACK,GAAV,IAAiBN,WAA3B;AACA,UAAIO,OAAO,GAAGN,SAAS,CAACM,OAAV,IAAqBP,WAAnC;AACA,UAAIQ,iBAAiB,GAAGP,SAAS,CAACO,iBAAV,IAA+BR,WAAvD;AACA,UAAIS,OAAO,GAAGR,SAAS,CAACQ,OAAV,IAAqBT,WAAnC;AACA,UAAIU,QAAQ,GAAGT,SAAS,CAACS,QAAV,IAAsBV,WAArC;AACA,UAAIW,QAAQ,GAAGV,SAAS,CAACU,QAAV,IAAsBX,WAArC;AACA,UAAIY,KAAK,GAAGX,SAAS,CAACW,KAAV,IAAmBZ,WAA/B;AACA,UAAIa,WAAW,GAAGZ,SAAS,CAACY,WAAV,IAAyBb,WAA3C;AACA,UAAIc,QAAQ,GAAGb,SAAS,CAACa,QAAV,IAAsBd,WAArC;AACA,UAAIe,iBAAiB,GAAGd,SAAS,CAACc,iBAAV,IAA+Bf,WAAvD;AACA,UAAIgB,MAAM,GAAGf,SAAS,CAACe,MAAV,IAAoBhB,WAAjC;AACA,UAAIiB,IAAI,GAAGhB,SAAS,CAACgB,IAAV,IAAkBjB,WAA7B;AACA,UAAI3B,KAAK,GAAG4B,SAAS,CAAC5B,KAAV,IAAmB2B,WAA/B;AACA,UAAIkB,GAAG,GAAGjB,SAAS,CAACiB,GAAV,IAAiBlB,WAA3B,CAnB0E,CAqB1E;;AACA/B,MAAAA,OAAO,CAACC,GAAR,CAAYkC,KAAZ;AACAnC,MAAAA,OAAO,CAACC,GAAR,CAAYR,IAAZ,EAvB0E,CAwB1E;AACA;;AACA,0BACA;AAA8B,QAAA,SAAS,EAAG,0BAAyBqC,KAAM,IAAGD,YAAY,CAACnC,MAAO,EAAhG;AAAA,kBAAoGmC,YAAY,CAACnC;AAAjH,SAAW,UAASoC,KAAM,EAA1B;AAAA;AAAA;AAAA;AAAA,cADA;AAGH,KA7B6B,CAA9B;AA+BA,wBACI;AAAK,MAAA,EAAE,EAAC,UAAR;AAAmB,MAAA,SAAS,EAAG,YAAW,KAAK1B,KAAL,CAAWG,QAAX,CAAoB,EAApB,EAAwBb,MAAO,EAAzE;AAAA,gBACKkC;AADL;AAAA;AAAA;AAAA;AAAA,YADJ;AAKH;;AA9IkD","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport \"./sass/stockbar2.css\";\r\nimport \"./css/customCSS.css\";\r\n\r\n// Custom Stock Object\r\nclass Stock {\r\n    constructor(name,symbol) {\r\n        this.name = name;\r\n        this.symbol = symbol;\r\n    }\r\n\r\n    logInfo() {\r\n        Object.values(this).map(value => {\r\n            console.log(value);\r\n        })\r\n    }\r\n}\r\n\r\nexport default class Stockbar2 extends React.Component {\r\n\r\n    state = {\r\n        loading: true,\r\n        stocks: [],\r\n        profiles: JSON.parse(localStorage.getItem(`Profiles List`)) || []\r\n    }\r\n\r\n    async componentDidMount(stockList, stockBar, stockElement, companyRow, companyImage, profileList) {\r\n\r\n        let profileArray = [];\r\n\r\n        const stockAPIURL = `https://financialmodelingprep.com/api/v3/available-traded/list?limit=100&apikey=7e60778244bbb11a3e59192e565ed625`;\r\n        const response = await fetch(stockAPIURL);\r\n        stockList = await response.json();\r\n        stockList.splice(100);\r\n\r\n        console.log(`Stock Data:`);\r\n        console.log(stockList);\r\n        this.setState({ stocks : stockList, loading: false});\r\n        this.setState({ profiles: JSON.parse(localStorage.getItem(`Profiles List`)), loading: false});\r\n\r\n        // stockList.map((company, index) => {\r\n        //     const stockProfileFetch = async () => {\r\n        //         const stockProfileFetchURL = `https://stock-exchange-dot-full-stack-course-services.ew.r.appspot.com/api/v3/company/profile/${company.symbol}`;\r\n        //         const response = await fetch(stockProfileFetchURL);\r\n        //         profileList = await response.json();\r\n        //         // profileArray.push(profileList);\r\n        //         localStorage.setItem(`Profiles List`, JSON.stringify(profileArray));\r\n        //     }\r\n        //     stockProfileFetch();\r\n        // })\r\n\r\n        profileArray = JSON.parse(localStorage.getItem(`Profiles List`)) || [];\r\n        console.log(`Profile Data:`);\r\n        console.log(profileArray);\r\n\r\n        // profileArray.forEach((companyProfile, index) => {\r\n\r\n        //     // Begin Profiles Array // Search Results Function\r\n        //     let plus = ``;\r\n        //     let condition = ``;\r\n        //     let symbol = companyProfile.symbol;\r\n        //     let name = companyProfile.profile.companyName || `Stock API`;\r\n        //     let image = companyProfile.profile.image || `https://raw.githubusercontent.com/strawhat19/Whats-Your-Deal/main/public/assets/Stock-Icon-Circle-Icon.png`;\r\n        //     let changes = companyProfile.profile.changes;\r\n\r\n        //     // Filtering for Price Increase or Decrease\r\n        //     if (changes >= 0) {\r\n        //         condition = `positive`;\r\n        //         plus = `+`;\r\n        //     }  else {\r\n        //         condition = `negative`;\r\n        //     }\r\n    \r\n        //     // Creating Rows for Each Company\r\n        //     companyRow = document.createElement(`div`);\r\n        //     // companyRow = React.createElement(`div`, {}, '');\r\n        //     companyImage = document.createElement(`img`); // Creating Image for Each Company\r\n\r\n        //     // Setting the Attributes of the Company Image\r\n        //     companyImage.setAttribute(`src`, image);\r\n        //     companyImage.setAttribute(`class`, `companyIcon`);\r\n        //     companyImage.setAttribute(`height`, `100px`);\r\n        //     companyImage.setAttribute(`width`, `100px`);\r\n\r\n        //     // Setting the Attributes of the Company Rows\r\n        //     companyRow.setAttribute(`class`, `companyRow`);\r\n\r\n        //     // Creating a New Element to Contain Company Data\r\n        //     let companyElement = document.createElement(`a`);\r\n        //     companyElement.setAttribute(`class`,`çompanyElement`);\r\n        //     companyElement.setAttribute(`ìd`, index + 1);\r\n        //     companyElement.setAttribute(`href`,`./html/company.html?symbol=${symbol}`);\r\n        //     companyElement.innerHTML = `\r\n        //     <span class=\"companyName\">${name}</span> \r\n        //     <span class=\"companySymbol\">(${symbol})</span>\r\n        //     <span class=\"companyChanges\">Hello</span>\r\n        //     <span class=\"companyChanges ${condition}\">(${plus}${changes})</span>\r\n        //     `;\r\n        //     // companyRow.prepend(companyImage);\r\n        //     companyRow.append(companyElement);\r\n\r\n        //     // Returning the Company Row\r\n        //     return companyRow;\r\n        // })\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n        if (!this.state.stocks.length) {\r\n            return <div>Didnt get Stocks</div>\r\n        }\r\n        if (this.state.loading) {\r\n            return <div>Loading...</div>\r\n        }\r\n\r\n        // const stockBarRender = this.state.stocks.map((stock,i) => {\r\n        //     return (\r\n        //     <div key={`stock${i}`}  className={`stock${i}`}>\r\n        //         <div className={`companyElement ${stock.name.toString()}`}>{stock.name.toString()}</div>\r\n        //     </div>\r\n        //     )\r\n        // });\r\n\r\n        const stockProfileBarRender = this.state.profiles.map((stockProfile,index) => {\r\n            let emptyString = `Nothing to Show`;\r\n            let stockProf = stockProfile.profile || emptyString;\r\n            let name = stockProf.companyName || emptyString;\r\n            let price = stockProf.price || emptyString;\r\n            let address = stockProf.address || emptyString;\r\n            let ceo = stockProf.ceo || emptyString;\r\n            let changes = stockProf.changes || emptyString;\r\n            let changesPercentage = stockProf.changesPercentage || emptyString;\r\n            let country = stockProf.country || emptyString;\r\n            let currency = stockProf.currency || emptyString;\r\n            let industry = stockProf.industry || emptyString;\r\n            let image = stockProf.image || emptyString;\r\n            let description = stockProf.description || emptyString;\r\n            let exchange = stockProf.exchange || emptyString;\r\n            let fullTimeEmployees = stockProf.fullTimeEmployees || emptyString;\r\n            let sector = stockProf.sector || emptyString;\r\n            let city = stockProf.city || emptyString;\r\n            let state = stockProf.state || emptyString;\r\n            let zip = stockProf.zip || emptyString;\r\n\r\n            // console.log(stockProf);\r\n            console.log(price);\r\n            console.log(name);\r\n            // let newStock = new Stock(stockProf.companyName,stockProfile.symbol);\r\n            // stockListNew.push(newStock);\r\n            return (\r\n            <div key={`profile${index}`}  className={`companyElement profile-${index} ${stockProfile.symbol}`}>{stockProfile.symbol}</div>\r\n            )\r\n        });\r\n\r\n        return (\r\n            <div id=\"stockBar\" className={`stockBar ${this.state.profiles[97].symbol}`}>\r\n                {stockProfileBarRender}\r\n            </div>\r\n        )\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}