{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\massa\\\\OneDrive\\\\Desktop\\\\Coding\\\\Whats-Your-Deal\\\\src\\\\App.js\";\nimport React from 'react';\nimport './sass/App.css';\nimport Header from './components/Header/header';\nimport Stockbar from './components/StockBar/stockbar';\nimport Main from './components/Main/main';\nimport Footer from './components/Footer/footer';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport $ from 'jquery'; // Custom Stock Object\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Stock {\n  constructor(name, image, symbol, price, website, description, ceo, employees, changesP, currency, country, industry, exchange, sector, city, state, zip, address, extra) {\n    this.name = name;\n    this.image = image;\n    this.symbol = symbol;\n    this.price = price;\n    this.website = website;\n    this.description = description;\n    this.ceo = ceo;\n    this.employees = employees;\n    this.changesP = changesP;\n    this.currency = currency;\n    this.country = country;\n    this.industry = industry;\n    this.exchange = exchange;\n    this.sector = sector;\n    this.city = city;\n    this.state = state;\n    this.zip = zip;\n    this.address = address;\n    this.extra = extra;\n  }\n\n  logInfo() {\n    Object.values(this).map(value => {\n      console.log(value);\n    });\n  }\n\n}\n\nexport default class App extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      stocks: []\n    };\n  }\n\n  async componentDidMount(stockList) {\n    $(`#stockBar`).hide();\n    const stockAPIURL = `https://financialmodelingprep.com/api/v3/available-traded/list?limit=100&apikey=7e60778244bbb11a3e59192e565ed625`;\n    const response = await fetch(stockAPIURL);\n    stockList = await response.json();\n    stockList.splice(100);\n    stockList.map((stock, index) => {\n      let symbol = stock.symbol;\n      const profileURL = `https://stock-exchange-dot-full-stack-course-services.ew.r.appspot.com/api/v3/company/profile/${symbol}`;\n      fetch(profileURL).then(newResponse => newResponse.json()).then((profileList, index) => {\n        let stockBarLoading = `Stock Bar is Loading: `;\n        let APIString = `API`;\n        let placeHolderImage = `https://raw.githubusercontent.com/strawhat19/Whats-Your-Deal/main/public/assets/Stock-Icon-Circle-Icon.png`;\n        let stockProf = profileList.profile || stockBarLoading;\n        let name = stockProf.companyName || stockBarLoading;\n        let emptyString = name || `Loading...`;\n        let plus = ``;\n        let condition = ``;\n        let image = stockProf.image || placeHolderImage;\n        let officialSymbol = profileList.symbol || APIString;\n        let price = stockProf.price || emptyString;\n        let website = stockProf.website || emptyString;\n        let description = stockProf.description || emptyString;\n        let ceo = stockProf.ceo || emptyString;\n        let employees = stockProf.fullTimeEmployees || emptyString;\n        let changes = stockProf.changes || emptyString;\n        let changesPercentage = stockProf.changesPercentage || emptyString;\n        let currency = stockProf.currency || emptyString;\n        let country = stockProf.country || emptyString;\n        let industry = stockProf.industry || emptyString;\n        let exchange = stockProf.exchange || emptyString;\n        let sector = stockProf.sector || emptyString;\n        let city = stockProf.city || emptyString;\n        let stateOfficial = stockProf.state || emptyString;\n        let zip = stockProf.zip || emptyString;\n        let address = stockProf.address || emptyString;\n        let stockElement = new Stock(name, image, officialSymbol, price, website, description, ceo, employees, changesPercentage, currency, country, industry, exchange, sector, city, stateOfficial, zip, address); // Filtering for Price Increase or Decrease\n\n        if (changes >= 0) {\n          condition = `positive`;\n          plus = `+`;\n        } else {\n          condition = `negative`;\n        }\n\n        $(`#stockBar`).addClass(`loaded`);\n        this.setState(previousState => ({\n          stocks: [...previousState.stocks, stockElement]\n        }));\n      });\n    });\n  }\n\n  render() {\n    if (!this.state.stocks.length) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Didnt get Stocks\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 16\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Stockbar, {\n        state: this.state\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Main, {\n        state: this.state\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/massa/OneDrive/Desktop/Coding/Whats-Your-Deal/src/App.js"],"names":["React","Header","Stockbar","Main","Footer","BrowserRouter","Router","Route","$","Stock","constructor","name","image","symbol","price","website","description","ceo","employees","changesP","currency","country","industry","exchange","sector","city","state","zip","address","extra","logInfo","Object","values","map","value","console","log","App","Component","stocks","componentDidMount","stockList","hide","stockAPIURL","response","fetch","json","splice","stock","index","profileURL","then","newResponse","profileList","stockBarLoading","APIString","placeHolderImage","stockProf","profile","companyName","emptyString","plus","condition","officialSymbol","fullTimeEmployees","changes","changesPercentage","stateOfficial","stockElement","addClass","setState","previousState","render","length"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport './sass/App.css';\r\nimport Header from './components/Header/header';\r\nimport Stockbar from './components/StockBar/stockbar';\r\nimport Main from './components/Main/main';\r\nimport Footer from './components/Footer/footer';\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\r\nimport $ from 'jquery';\r\n\r\n// Custom Stock Object\r\nclass Stock {\r\n  constructor(name,image,symbol,price,website,description,ceo,employees,changesP,currency,country,industry,exchange,sector,city,state,zip,address,extra) {\r\n      this.name = name;\r\n      this.image = image;\r\n      this.symbol = symbol;\r\n      this.price = price;\r\n      this.website = website;\r\n      this.description = description;\r\n      this.ceo = ceo;\r\n      this.employees = employees;\r\n      this.changesP = changesP;\r\n      this.currency = currency;\r\n      this.country = country;\r\n      this.industry = industry;\r\n      this.exchange = exchange;\r\n      this.sector = sector;\r\n      this.city = city;\r\n      this.state = state;\r\n      this.zip = zip;\r\n      this.address = address;\r\n      this.extra = extra;\r\n  }\r\n\r\n  logInfo() {\r\n      Object.values(this).map(value => {\r\n          console.log(value);\r\n      })\r\n  }\r\n}\r\n\r\nexport default class App extends React.Component {\r\n\r\n  state = {\r\n    stocks: [],\r\n  }\r\n\r\n  async componentDidMount(stockList) {\r\n      $(`#stockBar`).hide();\r\n      const stockAPIURL = `https://financialmodelingprep.com/api/v3/available-traded/list?limit=100&apikey=7e60778244bbb11a3e59192e565ed625`;\r\n      const response = await fetch(stockAPIURL);\r\n      stockList = await response.json();\r\n      stockList.splice(100);\r\n      stockList.map((stock,index) => {\r\n          let symbol = stock.symbol;\r\n          const profileURL = `https://stock-exchange-dot-full-stack-course-services.ew.r.appspot.com/api/v3/company/profile/${symbol}`;\r\n          fetch(profileURL).then(newResponse => newResponse.json()).then((profileList,index) => {\r\n            let stockBarLoading = `Stock Bar is Loading: `;\r\n            let APIString = `API`;\r\n            let placeHolderImage = `https://raw.githubusercontent.com/strawhat19/Whats-Your-Deal/main/public/assets/Stock-Icon-Circle-Icon.png`;\r\n            let stockProf = profileList.profile || stockBarLoading;\r\n            let name = stockProf.companyName || stockBarLoading;\r\n            let emptyString = name || `Loading...`;\r\n            let plus = ``;\r\n            let condition = ``;\r\n            let image = stockProf.image || placeHolderImage;\r\n            let officialSymbol = profileList.symbol || APIString;\r\n            let price = stockProf.price || emptyString;\r\n            let website = stockProf.website || emptyString;\r\n            let description = stockProf.description || emptyString;\r\n            let ceo = stockProf.ceo || emptyString;\r\n            let employees = stockProf.fullTimeEmployees || emptyString;\r\n            let changes = stockProf.changes || emptyString;\r\n            let changesPercentage = stockProf.changesPercentage || emptyString;\r\n            let currency = stockProf.currency || emptyString;\r\n            let country = stockProf.country || emptyString;\r\n            let industry = stockProf.industry || emptyString;\r\n            let exchange = stockProf.exchange || emptyString;\r\n            let sector = stockProf.sector || emptyString;\r\n            let city = stockProf.city || emptyString;\r\n            let stateOfficial = stockProf.state || emptyString;\r\n            let zip = stockProf.zip || emptyString;\r\n            let address = stockProf.address || emptyString;\r\n    \r\n            let stockElement = new Stock(name,image,officialSymbol,price,website,description,ceo,employees,changesPercentage,currency,country,industry,exchange,sector,city,stateOfficial,zip,address);\r\n    \r\n            // Filtering for Price Increase or Decrease\r\n            if (changes >= 0) {\r\n                condition = `positive`;\r\n                plus = `+`;\r\n            }  else {\r\n                condition = `negative`;\r\n            }\r\n    \r\n            $(`#stockBar`).addClass(`loaded`);\r\n\r\n            this.setState(previousState => ({\r\n                stocks: [...previousState.stocks, stockElement]\r\n            }));\r\n            \r\n          })\r\n      })\r\n  }\r\n\r\n  render() {\r\n\r\n    if (!this.state.stocks.length) {\r\n        return <div>Didnt get Stocks</div>\r\n    }\r\n\r\n    return (\r\n      <div className=\"App\">\r\n        <Header />\r\n        <Stockbar state={this.state} />\r\n        <Main state={this.state} />\r\n        <Footer />\r\n      </div>\r\n    );  \r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}