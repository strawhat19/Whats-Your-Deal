{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\massa\\\\OneDrive\\\\Desktop\\\\Coding\\\\Whats-Your-Deal\\\\src\\\\components\\\\StockBar\\\\stockbar.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport \"./sass/stockbar.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Stockbar(stockBar, stockElement, companyRow, companyImage, profilesArray, stockList) {\n  _s();\n\n  const [isStockList, setIsStockList] = React.useState(false);\n\n  const isntStockList = () => {\n    setIsStockList(false);\n  };\n\n  const IsStockList = () => {\n    setIsStockList(true);\n  };\n\n  stockBar = document.getElementById(`stockBar`);\n  profilesArray = JSON.parse(localStorage.getItem('Profiles List')) || []; // fetch(`https://financialmodelingprep.com/api/v3/available-traded/list?apikey=7e60778244bbb11a3e59192e565ed625`)\n  // .then(response => {\n  //     return response.json();\n  // }).then(data => {\n  //     data.splice(100);\n  //     stockList = [...new Set(data)];\n\n  stockList = JSON.parse(localStorage.getItem('Stock List')) || [];\n  console.log('Stock API Data Is:');\n  console.log(stockList); // localStorage.setItem(`Stock List`, JSON.stringify(stockList));\n\n  stockList.shift();\n  let stockListModded = stockList;\n  console.log('Stock List Modded:');\n  console.log(stockListModded);\n  stockList.forEach((company, index) => {\n    let profileURL = `https://stock-exchange-dot-full-stack-course-services.ew.r.appspot.com/api/v3/company/profile/${company.symbol}`; // fetch(profileURL)\n    //     .then((newResponse) => newResponse.json())\n    //     .then((profileData) => {\n    //     // Reinitializing Profile Array\n    //     profilesArray.push(profileData);\n\n    profilesArray = JSON.parse(localStorage.getItem('Profiles List')) || []; // localStorage.setItem(`Profiles List`, JSON.stringify(profilesArray));\n\n    profilesArray.forEach((companyProfile, index) => {\n      // Begin Profiles Array // Search Results Function\n      // let plus = ``;\n      // let condition = ``;\n      let symbol = companyProfile.symbol;\n      let name = companyProfile.profile.companyName; // let image = companyProfile.profile.image;\n      // let changes = companyProfile.profile.changes;\n      // Filtering for Price Increase or Decrease\n      // if (changes >= 0) {\n      //     condition = `positive`;\n      //     plus = `+`;\n      // }  else {\n      //     condition = `negative`;\n      // }\n      // Creating Rows for Each Company\n\n      companyRow = document.createElement(`div`); // companyImage = document.createElement(`img`); // Creating Image for Each Company\n      // Setting the Attributes of the Company Image\n      // companyImage.setAttribute(`src`, image);\n      // companyImage.setAttribute(`class`, `companyIcon`);\n      // companyImage.setAttribute(`height`, `100px`);\n      // companyImage.setAttribute(`width`, `100px`);\n      // Setting the Attributes of the Company Rows\n\n      companyRow.setAttribute(`class`, `companyRow`); // Creating a New Element to Contain Company Data\n\n      let companyElement = document.createElement(`a`);\n      companyElement.setAttribute(`href`, `./html/company.html?symbol=${symbol}`);\n      companyElement.setAttribute(`class`, `çompanyElement`);\n      companyElement.setAttribute(`ìd`, index + 1);\n      companyElement.innerHTML = `\n                    <span class=\"companyName\">${name}</span> \n                    <span class=\"companySymbol\">(${symbol})</span>\n                    <span class=\"companyChanges\">Hello</span>`; // Injecting the Elements we Created into the Rows\n      // <span class=\"companyChanges ${condition}\">(${plus}${changes})</span>`; // Injecting the Elements we Created into the Rows\n      // companyRow.prepend(companyImage);\n\n      companyRow.append(companyElement); // Returning the Company Row\n\n      return companyRow; // End Search Results Function\n    }); // Abstracted this code so it only appends rows on full word input\n\n    stockBar.append(companyRow); // Image Fixing\n    // const images = document.querySelectorAll(`img`);\n    // images.forEach(image => {\n    //     image.addEventListener(`error`,event => {\n    //         event.target.src=`../img/Stock-Icon-Circle-Icon.svg`;\n    //     })\n    // })\n    // let searchTerm = 'Hello';\n    // // Highlighting Searched Text on Company Names\n    // const companyNames = document.querySelectorAll(`.companyName`);\n    // companyNames.forEach(name => {\n    // let filteredCharacters = searchTerm.replace(/[.*+?^${}()|[\\]\\\\]/g,\"\\\\$&\");\n    // let filter = new RegExp(`${filteredCharacters}`,`gi`);\n    // name.innerHTML = name.textContent.replace(filter,match => `<mark>${match}</mark>`);\n    // })\n    // // Highlighting Searched Text on Company Symbols\n    // const companySymbols = document.querySelectorAll(`.companySymbol`);\n    // companySymbols.forEach(symbol => {\n    // let filteredCharacters = searchTerm.replace(/[.*+?^${}()|[\\]\\\\]/g,\"\\\\$&\");\n    // let filter = new RegExp(`${filteredCharacters}`,`gi`);\n    // symbol.innerHTML = symbol.textContent.replace(filter,match => `<mark>${match}</mark>`);\n    // })\n    // }); // Inner Fetch\n\n    stockElement = document.createElement(`div`);\n    stockElement.setAttribute(`class`, `stockElement`); // Add symbol with a price\n\n    let companyElement = document.createElement(`a`);\n    let companyImage = document.createElement(`img`); // Creating Image for Each Company\n    // Setting the Attributes of the Company Image\n\n    companyImage.setAttribute(`src`, company);\n    companyImage.setAttribute(`class`, `companyIcon`);\n    companyImage.setAttribute(`height`, `100px`);\n    companyImage.setAttribute(`width`, `100px`);\n    companyElement.setAttribute(`href`, `./html/company.html?symbol=${company.symbol}`);\n    companyElement.setAttribute(`class`, `companyElement ${company.symbol}`);\n    companyElement.setAttribute(`ìd`, index + 1);\n    stockElement.innerHTML = `${company.symbol} <span class=\"positive\"> | (${company.price})</span>`;\n    companyElement.append(stockElement);\n    stockBar.append(companyElement);\n  }); // }) // End Primary Fetch\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"stockBar marquee\",\n    id: \"stockBar\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 147,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Stockbar, \"NrbLR32G963E1MKu91UFT8nUNpM=\");\n\n_c = Stockbar;\nexport default Stockbar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Stockbar\");","map":{"version":3,"sources":["C:/Users/massa/OneDrive/Desktop/Coding/Whats-Your-Deal/src/components/StockBar/stockbar.jsx"],"names":["React","Stockbar","stockBar","stockElement","companyRow","companyImage","profilesArray","stockList","isStockList","setIsStockList","useState","isntStockList","IsStockList","document","getElementById","JSON","parse","localStorage","getItem","console","log","shift","stockListModded","forEach","company","index","profileURL","symbol","companyProfile","name","profile","companyName","createElement","setAttribute","companyElement","innerHTML","append","price"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport \"./sass/stockbar.css\";\r\n\r\nfunction Stockbar(stockBar, stockElement, companyRow, companyImage, profilesArray, stockList) {\r\n\r\n    const [isStockList, setIsStockList] = React.useState(false);\r\n\r\n    const isntStockList = () => {\r\n        setIsStockList(false);\r\n     };  \r\n     const IsStockList = () => {\r\n        setIsStockList(true);\r\n     };\r\n\r\n    stockBar = document.getElementById(`stockBar`);\r\n    profilesArray = JSON.parse(localStorage.getItem('Profiles List')) || [];\r\n\r\n    // fetch(`https://financialmodelingprep.com/api/v3/available-traded/list?apikey=7e60778244bbb11a3e59192e565ed625`)\r\n    // .then(response => {\r\n    //     return response.json();\r\n    // }).then(data => {\r\n\r\n    //     data.splice(100);\r\n    //     stockList = [...new Set(data)];\r\n        stockList = JSON.parse(localStorage.getItem('Stock List')) || [];\r\n        console.log('Stock API Data Is:');\r\n        console.log(stockList);\r\n        // localStorage.setItem(`Stock List`, JSON.stringify(stockList));\r\n        stockList.shift();\r\n        let stockListModded = stockList;\r\n        console.log('Stock List Modded:');\r\n        console.log(stockListModded);\r\n\r\n        stockList.forEach((company, index) => {\r\n            let profileURL = `https://stock-exchange-dot-full-stack-course-services.ew.r.appspot.com/api/v3/company/profile/${company.symbol}`;\r\n            // fetch(profileURL)\r\n            //     .then((newResponse) => newResponse.json())\r\n            //     .then((profileData) => {\r\n\r\n            //     // Reinitializing Profile Array\r\n            //     profilesArray.push(profileData);\r\n                profilesArray = JSON.parse(localStorage.getItem('Profiles List')) || [];\r\n                // localStorage.setItem(`Profiles List`, JSON.stringify(profilesArray));\r\n                profilesArray.forEach((companyProfile, index) => {\r\n\r\n                    // Begin Profiles Array // Search Results Function\r\n                    // let plus = ``;\r\n                    // let condition = ``;\r\n                    let symbol = companyProfile.symbol;\r\n                    let name = companyProfile.profile.companyName;\r\n                    // let image = companyProfile.profile.image;\r\n                    // let changes = companyProfile.profile.changes;\r\n\r\n                    // Filtering for Price Increase or Decrease\r\n                    // if (changes >= 0) {\r\n                    //     condition = `positive`;\r\n                    //     plus = `+`;\r\n                    // }  else {\r\n                    //     condition = `negative`;\r\n                    // }\r\n            \r\n                    // Creating Rows for Each Company\r\n                    companyRow = document.createElement(`div`);\r\n                    // companyImage = document.createElement(`img`); // Creating Image for Each Company\r\n        \r\n                    // Setting the Attributes of the Company Image\r\n                    // companyImage.setAttribute(`src`, image);\r\n                    // companyImage.setAttribute(`class`, `companyIcon`);\r\n                    // companyImage.setAttribute(`height`, `100px`);\r\n                    // companyImage.setAttribute(`width`, `100px`);\r\n\r\n                    // Setting the Attributes of the Company Rows\r\n                    companyRow.setAttribute(`class`, `companyRow`);\r\n\r\n                    // Creating a New Element to Contain Company Data\r\n                    let companyElement = document.createElement(`a`);\r\n                    companyElement.setAttribute(`href`,`./html/company.html?symbol=${symbol}`);\r\n                    companyElement.setAttribute(`class`,`çompanyElement`);\r\n                    companyElement.setAttribute(`ìd`, index + 1);\r\n                    companyElement.innerHTML = `\r\n                    <span class=\"companyName\">${name}</span> \r\n                    <span class=\"companySymbol\">(${symbol})</span>\r\n                    <span class=\"companyChanges\">Hello</span>`; // Injecting the Elements we Created into the Rows\r\n                    // <span class=\"companyChanges ${condition}\">(${plus}${changes})</span>`; // Injecting the Elements we Created into the Rows\r\n                    // companyRow.prepend(companyImage);\r\n                    companyRow.append(companyElement);\r\n\r\n                    // Returning the Company Row\r\n                    return companyRow;\r\n                    // End Search Results Function\r\n                });\r\n\r\n                // Abstracted this code so it only appends rows on full word input\r\n                stockBar.append(companyRow);\r\n\r\n                // Image Fixing\r\n                // const images = document.querySelectorAll(`img`);\r\n                // images.forEach(image => {\r\n                //     image.addEventListener(`error`,event => {\r\n                //         event.target.src=`../img/Stock-Icon-Circle-Icon.svg`;\r\n                //     })\r\n                // })\r\n\r\n                // let searchTerm = 'Hello';\r\n\r\n                // // Highlighting Searched Text on Company Names\r\n                // const companyNames = document.querySelectorAll(`.companyName`);\r\n                // companyNames.forEach(name => {\r\n                // let filteredCharacters = searchTerm.replace(/[.*+?^${}()|[\\]\\\\]/g,\"\\\\$&\");\r\n                // let filter = new RegExp(`${filteredCharacters}`,`gi`);\r\n                // name.innerHTML = name.textContent.replace(filter,match => `<mark>${match}</mark>`);\r\n                // })\r\n\r\n                // // Highlighting Searched Text on Company Symbols\r\n                // const companySymbols = document.querySelectorAll(`.companySymbol`);\r\n                // companySymbols.forEach(symbol => {\r\n                // let filteredCharacters = searchTerm.replace(/[.*+?^${}()|[\\]\\\\]/g,\"\\\\$&\");\r\n                // let filter = new RegExp(`${filteredCharacters}`,`gi`);\r\n                // symbol.innerHTML = symbol.textContent.replace(filter,match => `<mark>${match}</mark>`);\r\n                // })\r\n\r\n            // }); // Inner Fetch\r\n\r\n            stockElement = document.createElement(`div`);\r\n            stockElement.setAttribute(`class`,`stockElement`);\r\n\r\n            // Add symbol with a price\r\n            let companyElement = document.createElement(`a`);\r\n            let companyImage = document.createElement(`img`); // Creating Image for Each Company\r\n\r\n            // Setting the Attributes of the Company Image\r\n            companyImage.setAttribute(`src`, company);\r\n            companyImage.setAttribute(`class`, `companyIcon`);\r\n            companyImage.setAttribute(`height`, `100px`);\r\n            companyImage.setAttribute(`width`, `100px`);\r\n            companyElement.setAttribute(`href`,`./html/company.html?symbol=${company.symbol}`);\r\n            companyElement.setAttribute(`class`,`companyElement ${company.symbol}`);\r\n            companyElement.setAttribute(`ìd`, index + 1);\r\n            stockElement.innerHTML = `${company.symbol} <span class=\"positive\"> | (${company.price})</span>`;\r\n            companyElement.append(stockElement);\r\n            stockBar.append(companyElement);\r\n        });\r\n\r\n    // }) // End Primary Fetch\r\n\r\n    return (\r\n        <div className=\"stockBar marquee\" id=\"stockBar\"></div>\r\n    );\r\n}\r\n \r\nexport default Stockbar;"]},"metadata":{},"sourceType":"module"}