{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\massa\\\\OneDrive\\\\Desktop\\\\Coding\\\\Whats-Your-Deal\\\\src\\\\components\\\\StockBar\\\\stockbar.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport \"./sass/stockbar.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Stockbar(stockBar, stockElement, companyRow) {\n  _s();\n\n  const [isStockList, setIsStockList] = React.useState(false);\n\n  const isntStockList = () => {\n    setIsStockList(false);\n  };\n\n  const IsStockList = () => {\n    setIsStockList(true);\n  };\n\n  stockBar = document.getElementById(`stockBar`);\n  let profilesArray = [];\n  fetch(`https://financialmodelingprep.com/api/v3/available-traded/list?apikey=7e60778244bbb11a3e59192e565ed625`).then(response => {\n    return response.json();\n  }).then(stockList => {\n    stockList.splice(100);\n    console.log('Stock API Data Is:');\n    localStorage.setItem(`Stock List`, JSON.stringify(stockList));\n    console.log(stockList);\n    stockList.forEach((company, index) => {\n      let profileURL = `https://stock-exchange-dot-full-stack-course-services.ew.r.appspot.com/api/v3/company/profile/${company.symbol}`;\n      fetch(profileURL).then(newResponse => newResponse.json()).then(profileData => {\n        // Reinitializing Profile Array\n        profilesArray.push(profileData);\n        localStorage.setItem(`Profiles List`, JSON.stringify(profilesArray));\n        profilesArray.forEach((companyProfile, index) => {\n          // Begin Profiles Array // Search Results Function\n          let plus = ``;\n          let condition = ``;\n          let symbol = companyProfile.symbol;\n          let image = companyProfile.profile.image;\n          let changes = companyProfile.profile.changes.toFixed(2);\n          let name = companyProfile.profile.companyName; // Filtering for Price Increase or Decrease\n\n          if (changes >= 0) {\n            condition = `positive`;\n            plus = `+`;\n          } else {\n            condition = `negative`;\n          } // Creating Rows for Each Company\n\n\n          companyRow = document.createElement(`div`);\n          let companyImage = document.createElement(`img`); // Creating Image for Each Company\n          // Setting the Attributes of the Company Image\n\n          companyImage.setAttribute(`src`, image);\n          companyImage.setAttribute(`class`, `companyIcon`);\n          companyImage.setAttribute(`height`, `100px`);\n          companyImage.setAttribute(`width`, `100px`); // Setting the Attributes of the Company Rows\n\n          companyRow.setAttribute(`class`, `companyRow`); // Creating a New Element to Contain Company Data\n\n          let companyElement = document.createElement(`a`);\n          companyElement.setAttribute(`href`, `./html/company.html?symbol=${symbol}`);\n          companyElement.setAttribute(`class`, `çompanyElement`);\n          companyElement.setAttribute(`ìd`, index + 1);\n          companyElement.innerHTML = `\n                    <span class=\"companyName\">${name}</span> \n                    <span class=\"companySymbol\">(${symbol})</span>\n                    <span class=\"companyChanges ${condition}\">(${plus}${changes})</span>`; // Injecting the Elements we Created into the Rows\n\n          companyRow.prepend(companyImage);\n          companyRow.append(companyElement); // Returning the Company Row\n\n          return companyRow; // End Search Results Function\n        }); // Abstracted this code so it only appends rows on full word input\n\n        stockBar.append(companyRow); // Image Fixing\n\n        const images = document.querySelectorAll(`img`);\n        images.forEach(image => {\n          image.addEventListener(`error`, event => {\n            event.target.src = `../img/Stock-Icon-Circle-Icon.svg`;\n          });\n        }); // let searchTerm = 'Hello';\n        // // Highlighting Searched Text on Company Names\n        // const companyNames = document.querySelectorAll(`.companyName`);\n        // companyNames.forEach(name => {\n        // let filteredCharacters = searchTerm.replace(/[.*+?^${}()|[\\]\\\\]/g,\"\\\\$&\");\n        // let filter = new RegExp(`${filteredCharacters}`,`gi`);\n        // name.innerHTML = name.textContent.replace(filter,match => `<mark>${match}</mark>`);\n        // })\n        // // Highlighting Searched Text on Company Symbols\n        // const companySymbols = document.querySelectorAll(`.companySymbol`);\n        // companySymbols.forEach(symbol => {\n        // let filteredCharacters = searchTerm.replace(/[.*+?^${}()|[\\]\\\\]/g,\"\\\\$&\");\n        // let filter = new RegExp(`${filteredCharacters}`,`gi`);\n        // symbol.innerHTML = symbol.textContent.replace(filter,match => `<mark>${match}</mark>`);\n        // })\n      });\n      stockElement = document.createElement(`div`);\n      stockElement.setAttribute(`class`, `stockElement`); // Add symbol with a price\n\n      let companyElement = document.createElement(`a`);\n      let companyImage = document.createElement(`img`); // Creating Image for Each Company\n      // Setting the Attributes of the Company Image\n\n      companyImage.setAttribute(`src`, company);\n      companyImage.setAttribute(`class`, `companyIcon`);\n      companyImage.setAttribute(`height`, `100px`);\n      companyImage.setAttribute(`width`, `100px`);\n      companyElement.setAttribute(`href`, `./html/company.html?symbol=${company.symbol}`);\n      companyElement.setAttribute(`class`, `companyElement ${company.symbol}`);\n      companyElement.setAttribute(`ìd`, index + 1);\n      stockElement.innerHTML = `${company.symbol} <span class=\"positive\"> | (${company.price})</span>`;\n      companyElement.append(stockElement);\n      stockBar.append(companyElement);\n    });\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"stockBar marquee\",\n    id: \"stockBar\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 139,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Stockbar, \"NrbLR32G963E1MKu91UFT8nUNpM=\");\n\n_c = Stockbar;\nexport default Stockbar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Stockbar\");","map":{"version":3,"sources":["C:/Users/massa/OneDrive/Desktop/Coding/Whats-Your-Deal/src/components/StockBar/stockbar.jsx"],"names":["React","Stockbar","stockBar","stockElement","companyRow","isStockList","setIsStockList","useState","isntStockList","IsStockList","document","getElementById","profilesArray","fetch","then","response","json","stockList","splice","console","log","localStorage","setItem","JSON","stringify","forEach","company","index","profileURL","symbol","newResponse","profileData","push","companyProfile","plus","condition","image","profile","changes","toFixed","name","companyName","createElement","companyImage","setAttribute","companyElement","innerHTML","prepend","append","images","querySelectorAll","addEventListener","event","target","src","price"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport \"./sass/stockbar.css\";\r\n\r\nfunction Stockbar(stockBar, stockElement, companyRow) {\r\n\r\n    const [isStockList, setIsStockList] = React.useState(false);\r\n\r\n    const isntStockList = () => {\r\n        setIsStockList(false);\r\n     };  \r\n     const IsStockList = () => {\r\n        setIsStockList(true);\r\n     };\r\n\r\n    stockBar = document.getElementById(`stockBar`);\r\n    let profilesArray = [];\r\n\r\n    fetch(`https://financialmodelingprep.com/api/v3/available-traded/list?apikey=7e60778244bbb11a3e59192e565ed625`)\r\n    .then(response => {\r\n        return response.json();\r\n    }).then(stockList => {\r\n\r\n        stockList.splice(100);\r\n        console.log('Stock API Data Is:');\r\n        localStorage.setItem(`Stock List`, JSON.stringify(stockList));\r\n        console.log(stockList);\r\n\r\n        stockList.forEach((company, index) => {\r\n            let profileURL = `https://stock-exchange-dot-full-stack-course-services.ew.r.appspot.com/api/v3/company/profile/${company.symbol}`;\r\n            fetch(profileURL)\r\n                .then((newResponse) => newResponse.json())\r\n                .then((profileData) => {\r\n\r\n                // Reinitializing Profile Array\r\n                profilesArray.push(profileData);\r\n                localStorage.setItem(`Profiles List`, JSON.stringify(profilesArray));\r\n                profilesArray.forEach((companyProfile, index) => {\r\n\r\n                    // Begin Profiles Array // Search Results Function\r\n                    let plus = ``;\r\n                    let condition = ``;\r\n                    let symbol = companyProfile.symbol;\r\n                    let image = companyProfile.profile.image;\r\n                    let changes = companyProfile.profile.changes.toFixed(2);\r\n                    let name = companyProfile.profile.companyName;\r\n\r\n                    // Filtering for Price Increase or Decrease\r\n                    if (changes >= 0) {\r\n                        condition = `positive`;\r\n                        plus = `+`;\r\n                    }  else {\r\n                        condition = `negative`;\r\n                    }\r\n            \r\n                    // Creating Rows for Each Company\r\n                    companyRow = document.createElement(`div`);\r\n                    let companyImage = document.createElement(`img`); // Creating Image for Each Company\r\n        \r\n                    // Setting the Attributes of the Company Image\r\n                    companyImage.setAttribute(`src`, image);\r\n                    companyImage.setAttribute(`class`, `companyIcon`);\r\n                    companyImage.setAttribute(`height`, `100px`);\r\n                    companyImage.setAttribute(`width`, `100px`);\r\n\r\n                    // Setting the Attributes of the Company Rows\r\n                    companyRow.setAttribute(`class`, `companyRow`);\r\n\r\n                    // Creating a New Element to Contain Company Data\r\n                    let companyElement = document.createElement(`a`);\r\n                    companyElement.setAttribute(`href`,`./html/company.html?symbol=${symbol}`);\r\n                    companyElement.setAttribute(`class`,`çompanyElement`);\r\n                    companyElement.setAttribute(`ìd`, index + 1);\r\n                    companyElement.innerHTML = `\r\n                    <span class=\"companyName\">${name}</span> \r\n                    <span class=\"companySymbol\">(${symbol})</span>\r\n                    <span class=\"companyChanges ${condition}\">(${plus}${changes})</span>`; // Injecting the Elements we Created into the Rows\r\n                    companyRow.prepend(companyImage);\r\n                    companyRow.append(companyElement);\r\n\r\n                    // Returning the Company Row\r\n                    return companyRow;\r\n                    // End Search Results Function\r\n                });\r\n\r\n                // Abstracted this code so it only appends rows on full word input\r\n                stockBar.append(companyRow);\r\n\r\n                // Image Fixing\r\n                const images = document.querySelectorAll(`img`);\r\n                images.forEach(image => {\r\n                    image.addEventListener(`error`,event => {\r\n                        event.target.src=`../img/Stock-Icon-Circle-Icon.svg`;\r\n                    })\r\n                })\r\n\r\n                // let searchTerm = 'Hello';\r\n\r\n                // // Highlighting Searched Text on Company Names\r\n                // const companyNames = document.querySelectorAll(`.companyName`);\r\n                // companyNames.forEach(name => {\r\n                // let filteredCharacters = searchTerm.replace(/[.*+?^${}()|[\\]\\\\]/g,\"\\\\$&\");\r\n                // let filter = new RegExp(`${filteredCharacters}`,`gi`);\r\n                // name.innerHTML = name.textContent.replace(filter,match => `<mark>${match}</mark>`);\r\n                // })\r\n\r\n                // // Highlighting Searched Text on Company Symbols\r\n                // const companySymbols = document.querySelectorAll(`.companySymbol`);\r\n                // companySymbols.forEach(symbol => {\r\n                // let filteredCharacters = searchTerm.replace(/[.*+?^${}()|[\\]\\\\]/g,\"\\\\$&\");\r\n                // let filter = new RegExp(`${filteredCharacters}`,`gi`);\r\n                // symbol.innerHTML = symbol.textContent.replace(filter,match => `<mark>${match}</mark>`);\r\n                // })\r\n\r\n            });\r\n\r\n            stockElement = document.createElement(`div`);\r\n            stockElement.setAttribute(`class`,`stockElement`);\r\n\r\n            // Add symbol with a price\r\n            let companyElement = document.createElement(`a`);\r\n            let companyImage = document.createElement(`img`); // Creating Image for Each Company\r\n\r\n            // Setting the Attributes of the Company Image\r\n            companyImage.setAttribute(`src`, company);\r\n            companyImage.setAttribute(`class`, `companyIcon`);\r\n            companyImage.setAttribute(`height`, `100px`);\r\n            companyImage.setAttribute(`width`, `100px`);\r\n            companyElement.setAttribute(`href`,`./html/company.html?symbol=${company.symbol}`);\r\n            companyElement.setAttribute(`class`,`companyElement ${company.symbol}`);\r\n            companyElement.setAttribute(`ìd`, index + 1);\r\n            stockElement.innerHTML = `${company.symbol} <span class=\"positive\"> | (${company.price})</span>`;\r\n            companyElement.append(stockElement);\r\n            stockBar.append(companyElement);\r\n        });\r\n\r\n    })\r\n\r\n    return (\r\n        <div className=\"stockBar marquee\" id=\"stockBar\"></div>\r\n    );\r\n}\r\n \r\nexport default Stockbar;"]},"metadata":{},"sourceType":"module"}