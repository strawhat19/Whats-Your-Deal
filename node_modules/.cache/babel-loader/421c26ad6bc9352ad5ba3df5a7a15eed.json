{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\massa\\\\OneDrive\\\\Desktop\\\\Coding\\\\Whats-Your-Deal\\\\src\\\\App.js\";\nimport React from 'react';\nimport './sass/App.css';\nimport Header from './components/Header/header';\nimport Stockbar from './components/StockBar/stockbar';\nimport Main from './components/Main/main';\nimport Footer from './components/Footer/footer';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport $ from 'jquery'; // Custom Stock Object\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Stock {\n  constructor(name, image, symbol, price, website, description, ceo, employees, changesP, currency, country, industry, exchange, sector, city, state, zip, address, extra) {\n    this.name = name;\n    this.image = image;\n    this.symbol = symbol;\n    this.price = price;\n    this.website = website;\n    this.description = description;\n    this.ceo = ceo;\n    this.employees = employees;\n    this.changesP = changesP;\n    this.currency = currency;\n    this.country = country;\n    this.industry = industry;\n    this.exchange = exchange;\n    this.sector = sector;\n    this.city = city;\n    this.state = state;\n    this.zip = zip;\n    this.address = address;\n    this.extra = extra;\n  }\n\n  logInfo() {\n    Object.values(this).map(value => {\n      console.log(value);\n    });\n  }\n\n}\n\nlet testArray1 = [];\nlet testArray2 = [];\nexport default class App extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      loading: true,\n      profiles: [],\n      stocks: [],\n      stocksArray: [],\n      stockProfileBarRenderFunction: ``\n    };\n  }\n\n  async componentDidMount(stockList) {\n    $(`#stockBar`).hide();\n    const stockAPIURL = `https://financialmodelingprep.com/api/v3/available-traded/list?limit=100&apikey=7e60778244bbb11a3e59192e565ed625`;\n    const response = await fetch(stockAPIURL);\n    stockList = await response.json();\n    stockList.splice(100);\n    testArray1.push(stockList);\n    console.log(testArray1);\n    stockList.map((stock, index) => {\n      let symbol = stock.symbol;\n      const profileURL = `https://stock-exchange-dot-full-stack-course-services.ew.r.appspot.com/api/v3/company/profile/${symbol}`;\n      fetch(profileURL).then(newResponse => newResponse.json()).then(profileList => {\n        testArray2.push(profileList);\n        console.log(testArray2); // this.setState(previousState => ({\n        //     profiles: [...previousState.profiles, profileList],\n        //     loading: false\n        // }));\n      });\n    });\n  }\n\n  render() {\n    let STOCKS = this.state.stocksArray;\n\n    if (!this.state.profiles.length) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Didnt get Stocks\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 16\n      }, this);\n    }\n\n    const stockProfileBarRender = this.state.profiles.map((stockProfile, index) => {\n      let stockBarLoading = `Stock Bar is Loading: `;\n      let APIString = `API`;\n      let placeHolderImage = `https://raw.githubusercontent.com/strawhat19/Whats-Your-Deal/main/public/assets/Stock-Icon-Circle-Icon.png`;\n      let stockProf = stockProfile.profile || stockBarLoading;\n      let name = stockProf.companyName || stockBarLoading;\n      let emptyString = name || `Loading...`;\n      let plus = ``;\n      let condition = ``;\n      let image = stockProf.image || placeHolderImage;\n      let officialSymbol = stockProfile.symbol || APIString;\n      let price = stockProf.price || emptyString;\n      let website = stockProf.website || emptyString;\n      let description = stockProf.description || emptyString;\n      let ceo = stockProf.ceo || emptyString;\n      let employees = stockProf.fullTimeEmployees || emptyString;\n      let changes = stockProf.changes || emptyString;\n      let changesPercentage = stockProf.changesPercentage || emptyString;\n      let currency = stockProf.currency || emptyString;\n      let country = stockProf.country || emptyString;\n      let industry = stockProf.industry || emptyString;\n      let exchange = stockProf.exchange || emptyString;\n      let sector = stockProf.sector || emptyString;\n      let city = stockProf.city || emptyString;\n      let stateOfficial = stockProf.state || emptyString;\n      let zip = stockProf.zip || emptyString;\n      let address = stockProf.address || emptyString;\n      let stockElement = new Stock(name, image, officialSymbol, price, website, description, ceo, employees, changesPercentage, currency, country, industry, exchange, sector, city, stateOfficial, zip, address);\n      STOCKS.push(stockElement); // console.log(`Stock Profiles:`);\n      // console.log(STOCKS);\n      // this.setState({ stocksArray : STOCKS, loading: false});\n      //   this.setState(previousState => ({\n      //     stocksArray: [...previousState.stocksArray, STOCKS],\n      //     loading: false\n      // }));\n      // Filtering for Price Increase or Decrease\n\n      if (changes >= 0) {\n        condition = `positive`;\n        plus = `+`;\n      } else {\n        condition = `negative`;\n      }\n\n      $(`#stockBar`).addClass(`loaded`);\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        id: `${stockProfile.symbol}`,\n        className: `companyElement profile-${index} ${stockProfile.symbol}`,\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          href: website,\n          target: \"_blank\",\n          title: name,\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"companyIcon\",\n            src: image,\n            alt: \"Company Image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: `companySymbol ${officialSymbol}`,\n            children: officialSymbol\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: `companyChanges ${condition}`,\n            children: [plus, \" \", changes]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 13\n        }, this)\n      }, `profile${index}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this);\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Stockbar, {\n        state: this.state\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Main, {\n        state: this.state\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/massa/OneDrive/Desktop/Coding/Whats-Your-Deal/src/App.js"],"names":["React","Header","Stockbar","Main","Footer","BrowserRouter","Router","Route","$","Stock","constructor","name","image","symbol","price","website","description","ceo","employees","changesP","currency","country","industry","exchange","sector","city","state","zip","address","extra","logInfo","Object","values","map","value","console","log","testArray1","testArray2","App","Component","loading","profiles","stocks","stocksArray","stockProfileBarRenderFunction","componentDidMount","stockList","hide","stockAPIURL","response","fetch","json","splice","push","stock","index","profileURL","then","newResponse","profileList","render","STOCKS","length","stockProfileBarRender","stockProfile","stockBarLoading","APIString","placeHolderImage","stockProf","profile","companyName","emptyString","plus","condition","officialSymbol","fullTimeEmployees","changes","changesPercentage","stateOfficial","stockElement","addClass"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,gBAAP;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,QAAP,MAAqB,gCAArB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,KAAlC,QAA+C,kBAA/C;AACA,OAAOC,CAAP,MAAc,QAAd,C,CAEA;;;;AACA,MAAMC,KAAN,CAAY;AACVC,EAAAA,WAAW,CAACC,IAAD,EAAMC,KAAN,EAAYC,MAAZ,EAAmBC,KAAnB,EAAyBC,OAAzB,EAAiCC,WAAjC,EAA6CC,GAA7C,EAAiDC,SAAjD,EAA2DC,QAA3D,EAAoEC,QAApE,EAA6EC,OAA7E,EAAqFC,QAArF,EAA8FC,QAA9F,EAAuGC,MAAvG,EAA8GC,IAA9G,EAAmHC,KAAnH,EAAyHC,GAAzH,EAA6HC,OAA7H,EAAqIC,KAArI,EAA4I;AACnJ,SAAKlB,IAAL,GAAYA,IAAZ;AACA,SAAKC,KAAL,GAAaA,KAAb;AACA,SAAKC,MAAL,GAAcA,MAAd;AACA,SAAKC,KAAL,GAAaA,KAAb;AACA,SAAKC,OAAL,GAAeA,OAAf;AACA,SAAKC,WAAL,GAAmBA,WAAnB;AACA,SAAKC,GAAL,GAAWA,GAAX;AACA,SAAKC,SAAL,GAAiBA,SAAjB;AACA,SAAKC,QAAL,GAAgBA,QAAhB;AACA,SAAKC,QAAL,GAAgBA,QAAhB;AACA,SAAKC,OAAL,GAAeA,OAAf;AACA,SAAKC,QAAL,GAAgBA,QAAhB;AACA,SAAKC,QAAL,GAAgBA,QAAhB;AACA,SAAKC,MAAL,GAAcA,MAAd;AACA,SAAKC,IAAL,GAAYA,IAAZ;AACA,SAAKC,KAAL,GAAaA,KAAb;AACA,SAAKC,GAAL,GAAWA,GAAX;AACA,SAAKC,OAAL,GAAeA,OAAf;AACA,SAAKC,KAAL,GAAaA,KAAb;AACH;;AAEDC,EAAAA,OAAO,GAAG;AACNC,IAAAA,MAAM,CAACC,MAAP,CAAc,IAAd,EAAoBC,GAApB,CAAwBC,KAAK,IAAI;AAC7BC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH,KAFD;AAGH;;AA3BS;;AA8BZ,IAAIG,UAAU,GAAG,EAAjB;AACA,IAAIC,UAAU,GAAG,EAAjB;AAEA,eAAe,MAAMC,GAAN,SAAkBvC,KAAK,CAACwC,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAE/Cd,KAF+C,GAEvC;AACNe,MAAAA,OAAO,EAAE,IADH;AAENC,MAAAA,QAAQ,EAAE,EAFJ;AAGNC,MAAAA,MAAM,EAAE,EAHF;AAINC,MAAAA,WAAW,EAAE,EAJP;AAKNC,MAAAA,6BAA6B,EAAG;AAL1B,KAFuC;AAAA;;AAUxB,QAAjBC,iBAAiB,CAACC,SAAD,EAAY;AAC/BvC,IAAAA,CAAC,CAAE,WAAF,CAAD,CAAewC,IAAf;AACA,UAAMC,WAAW,GAAI,kHAArB;AACA,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACF,WAAD,CAA5B;AACAF,IAAAA,SAAS,GAAG,MAAMG,QAAQ,CAACE,IAAT,EAAlB;AACAL,IAAAA,SAAS,CAACM,MAAV,CAAiB,GAAjB;AACAhB,IAAAA,UAAU,CAACiB,IAAX,CAAgBP,SAAhB;AACAZ,IAAAA,OAAO,CAACC,GAAR,CAAYC,UAAZ;AACAU,IAAAA,SAAS,CAACd,GAAV,CAAc,CAACsB,KAAD,EAAOC,KAAP,KAAiB;AAC3B,UAAI3C,MAAM,GAAG0C,KAAK,CAAC1C,MAAnB;AACA,YAAM4C,UAAU,GAAI,iGAAgG5C,MAAO,EAA3H;AACAsC,MAAAA,KAAK,CAACM,UAAD,CAAL,CAAkBC,IAAlB,CAAuBC,WAAW,IAAIA,WAAW,CAACP,IAAZ,EAAtC,EAA0DM,IAA1D,CAA+DE,WAAW,IAAI;AAC1EtB,QAAAA,UAAU,CAACgB,IAAX,CAAgBM,WAAhB;AACAzB,QAAAA,OAAO,CAACC,GAAR,CAAYE,UAAZ,EAF0E,CAG1E;AACA;AACA;AACA;AACH,OAPD;AAQH,KAXD;AAYH;;AAEDuB,EAAAA,MAAM,GAAG;AAEP,QAAIC,MAAM,GAAG,KAAKpC,KAAL,CAAWkB,WAAxB;;AAEA,QAAI,CAAC,KAAKlB,KAAL,CAAWgB,QAAX,CAAoBqB,MAAzB,EAAiC;AAC7B,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACH;;AAED,UAAMC,qBAAqB,GAAG,KAAKtC,KAAL,CAAWgB,QAAX,CAAoBT,GAApB,CAAwB,CAACgC,YAAD,EAAcT,KAAd,KAAwB;AAE1E,UAAIU,eAAe,GAAI,wBAAvB;AACA,UAAIC,SAAS,GAAI,KAAjB;AACA,UAAIC,gBAAgB,GAAI,4GAAxB;AACA,UAAIC,SAAS,GAAGJ,YAAY,CAACK,OAAb,IAAwBJ,eAAxC;AACA,UAAIvD,IAAI,GAAG0D,SAAS,CAACE,WAAV,IAAyBL,eAApC;AACA,UAAIM,WAAW,GAAG7D,IAAI,IAAK,YAA3B;AACA,UAAI8D,IAAI,GAAI,EAAZ;AACA,UAAIC,SAAS,GAAI,EAAjB;AACA,UAAI9D,KAAK,GAAGyD,SAAS,CAACzD,KAAV,IAAmBwD,gBAA/B;AACA,UAAIO,cAAc,GAAGV,YAAY,CAACpD,MAAb,IAAuBsD,SAA5C;AACA,UAAIrD,KAAK,GAAGuD,SAAS,CAACvD,KAAV,IAAmB0D,WAA/B;AACA,UAAIzD,OAAO,GAAGsD,SAAS,CAACtD,OAAV,IAAqByD,WAAnC;AACA,UAAIxD,WAAW,GAAGqD,SAAS,CAACrD,WAAV,IAAyBwD,WAA3C;AACA,UAAIvD,GAAG,GAAGoD,SAAS,CAACpD,GAAV,IAAiBuD,WAA3B;AACA,UAAItD,SAAS,GAAGmD,SAAS,CAACO,iBAAV,IAA+BJ,WAA/C;AACA,UAAIK,OAAO,GAAGR,SAAS,CAACQ,OAAV,IAAqBL,WAAnC;AACA,UAAIM,iBAAiB,GAAGT,SAAS,CAACS,iBAAV,IAA+BN,WAAvD;AACA,UAAIpD,QAAQ,GAAGiD,SAAS,CAACjD,QAAV,IAAsBoD,WAArC;AACA,UAAInD,OAAO,GAAGgD,SAAS,CAAChD,OAAV,IAAqBmD,WAAnC;AACA,UAAIlD,QAAQ,GAAG+C,SAAS,CAAC/C,QAAV,IAAsBkD,WAArC;AACA,UAAIjD,QAAQ,GAAG8C,SAAS,CAAC9C,QAAV,IAAsBiD,WAArC;AACA,UAAIhD,MAAM,GAAG6C,SAAS,CAAC7C,MAAV,IAAoBgD,WAAjC;AACA,UAAI/C,IAAI,GAAG4C,SAAS,CAAC5C,IAAV,IAAkB+C,WAA7B;AACA,UAAIO,aAAa,GAAGV,SAAS,CAAC3C,KAAV,IAAmB8C,WAAvC;AACA,UAAI7C,GAAG,GAAG0C,SAAS,CAAC1C,GAAV,IAAiB6C,WAA3B;AACA,UAAI5C,OAAO,GAAGyC,SAAS,CAACzC,OAAV,IAAqB4C,WAAnC;AAEA,UAAIQ,YAAY,GAAG,IAAIvE,KAAJ,CAAUE,IAAV,EAAeC,KAAf,EAAqB+D,cAArB,EAAoC7D,KAApC,EAA0CC,OAA1C,EAAkDC,WAAlD,EAA8DC,GAA9D,EAAkEC,SAAlE,EAA4E4D,iBAA5E,EAA8F1D,QAA9F,EAAuGC,OAAvG,EAA+GC,QAA/G,EAAwHC,QAAxH,EAAiIC,MAAjI,EAAwIC,IAAxI,EAA6IsD,aAA7I,EAA2JpD,GAA3J,EAA+JC,OAA/J,CAAnB;AACAkC,MAAAA,MAAM,CAACR,IAAP,CAAY0B,YAAZ,EA9B0E,CA+B1E;AACA;AAEA;AACF;AACA;AACA;AACA;AAEE;;AACA,UAAIH,OAAO,IAAI,CAAf,EAAkB;AACdH,QAAAA,SAAS,GAAI,UAAb;AACAD,QAAAA,IAAI,GAAI,GAAR;AACH,OAHD,MAGQ;AACJC,QAAAA,SAAS,GAAI,UAAb;AACH;;AAEDlE,MAAAA,CAAC,CAAE,WAAF,CAAD,CAAeyE,QAAf,CAAyB,QAAzB;AAEA,0BACA;AAA8B,QAAA,EAAE,EAAG,GAAEhB,YAAY,CAACpD,MAAO,EAAzD;AAA4D,QAAA,SAAS,EAAG,0BAAyB2C,KAAM,IAAGS,YAAY,CAACpD,MAAO,EAA9H;AAAA,+BACI;AAAG,UAAA,IAAI,EAAEE,OAAT;AAAkB,UAAA,MAAM,EAAC,QAAzB;AAAkC,UAAA,KAAK,EAAEJ,IAAzC;AAAA,kCACI;AAAK,YAAA,SAAS,EAAC,aAAf;AAA6B,YAAA,GAAG,EAAEC,KAAlC;AAAyC,YAAA,GAAG,EAAC;AAA7C;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAM,YAAA,SAAS,EAAG,iBAAgB+D,cAAe,EAAjD;AAAA,sBAAqDA;AAArD;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAGI;AAAM,YAAA,SAAS,EAAG,kBAAiBD,SAAU,EAA7C;AAAA,uBAAiDD,IAAjD,OAAwDI,OAAxD;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ,SAAW,UAASrB,KAAM,EAA1B;AAAA;AAAA;AAAA;AAAA,cADA;AASH,KA3D6B,CAA9B;AA6DA,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,8BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,QAAD;AAAU,QAAA,KAAK,EAAE,KAAK9B;AAAtB;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE,QAAC,IAAD;AAAM,QAAA,KAAK,EAAE,KAAKA;AAAlB;AAAA;AAAA;AAAA;AAAA,cAHF,eAIE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAQD;;AA7G8C","sourcesContent":["import React from 'react';\r\nimport './sass/App.css';\r\nimport Header from './components/Header/header';\r\nimport Stockbar from './components/StockBar/stockbar';\r\nimport Main from './components/Main/main';\r\nimport Footer from './components/Footer/footer';\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\r\nimport $ from 'jquery';\r\n\r\n// Custom Stock Object\r\nclass Stock {\r\n  constructor(name,image,symbol,price,website,description,ceo,employees,changesP,currency,country,industry,exchange,sector,city,state,zip,address,extra) {\r\n      this.name = name;\r\n      this.image = image;\r\n      this.symbol = symbol;\r\n      this.price = price;\r\n      this.website = website;\r\n      this.description = description;\r\n      this.ceo = ceo;\r\n      this.employees = employees;\r\n      this.changesP = changesP;\r\n      this.currency = currency;\r\n      this.country = country;\r\n      this.industry = industry;\r\n      this.exchange = exchange;\r\n      this.sector = sector;\r\n      this.city = city;\r\n      this.state = state;\r\n      this.zip = zip;\r\n      this.address = address;\r\n      this.extra = extra;\r\n  }\r\n\r\n  logInfo() {\r\n      Object.values(this).map(value => {\r\n          console.log(value);\r\n      })\r\n  }\r\n}\r\n\r\nlet testArray1 = [];\r\nlet testArray2 = [];\r\n\r\nexport default class App extends React.Component {\r\n\r\n  state = {\r\n    loading: true,\r\n    profiles: [],\r\n    stocks: [],\r\n    stocksArray: [],\r\n    stockProfileBarRenderFunction: ``\r\n  }\r\n\r\n  async componentDidMount(stockList) {\r\n      $(`#stockBar`).hide();\r\n      const stockAPIURL = `https://financialmodelingprep.com/api/v3/available-traded/list?limit=100&apikey=7e60778244bbb11a3e59192e565ed625`;\r\n      const response = await fetch(stockAPIURL);\r\n      stockList = await response.json();\r\n      stockList.splice(100);\r\n      testArray1.push(stockList);\r\n      console.log(testArray1);\r\n      stockList.map((stock,index) => {\r\n          let symbol = stock.symbol;\r\n          const profileURL = `https://stock-exchange-dot-full-stack-course-services.ew.r.appspot.com/api/v3/company/profile/${symbol}`;\r\n          fetch(profileURL).then(newResponse => newResponse.json()).then(profileList => {\r\n              testArray2.push(profileList);\r\n              console.log(testArray2);\r\n              // this.setState(previousState => ({\r\n              //     profiles: [...previousState.profiles, profileList],\r\n              //     loading: false\r\n              // }));\r\n          })\r\n      })\r\n  }\r\n\r\n  render() {\r\n\r\n    let STOCKS = this.state.stocksArray;\r\n\r\n    if (!this.state.profiles.length) {\r\n        return <div>Didnt get Stocks</div>\r\n    }\r\n\r\n    const stockProfileBarRender = this.state.profiles.map((stockProfile,index) => {\r\n\r\n        let stockBarLoading = `Stock Bar is Loading: `;\r\n        let APIString = `API`;\r\n        let placeHolderImage = `https://raw.githubusercontent.com/strawhat19/Whats-Your-Deal/main/public/assets/Stock-Icon-Circle-Icon.png`;\r\n        let stockProf = stockProfile.profile || stockBarLoading;\r\n        let name = stockProf.companyName || stockBarLoading;\r\n        let emptyString = name || `Loading...`;\r\n        let plus = ``;\r\n        let condition = ``;\r\n        let image = stockProf.image || placeHolderImage;\r\n        let officialSymbol = stockProfile.symbol || APIString;\r\n        let price = stockProf.price || emptyString;\r\n        let website = stockProf.website || emptyString;\r\n        let description = stockProf.description || emptyString;\r\n        let ceo = stockProf.ceo || emptyString;\r\n        let employees = stockProf.fullTimeEmployees || emptyString;\r\n        let changes = stockProf.changes || emptyString;\r\n        let changesPercentage = stockProf.changesPercentage || emptyString;\r\n        let currency = stockProf.currency || emptyString;\r\n        let country = stockProf.country || emptyString;\r\n        let industry = stockProf.industry || emptyString;\r\n        let exchange = stockProf.exchange || emptyString;\r\n        let sector = stockProf.sector || emptyString;\r\n        let city = stockProf.city || emptyString;\r\n        let stateOfficial = stockProf.state || emptyString;\r\n        let zip = stockProf.zip || emptyString;\r\n        let address = stockProf.address || emptyString;\r\n\r\n        let stockElement = new Stock(name,image,officialSymbol,price,website,description,ceo,employees,changesPercentage,currency,country,industry,exchange,sector,city,stateOfficial,zip,address);\r\n        STOCKS.push(stockElement);\r\n        // console.log(`Stock Profiles:`);\r\n        // console.log(STOCKS);\r\n\r\n        // this.setState({ stocksArray : STOCKS, loading: false});\r\n      //   this.setState(previousState => ({\r\n      //     stocksArray: [...previousState.stocksArray, STOCKS],\r\n      //     loading: false\r\n      // }));\r\n\r\n        // Filtering for Price Increase or Decrease\r\n        if (changes >= 0) {\r\n            condition = `positive`;\r\n            plus = `+`;\r\n        }  else {\r\n            condition = `negative`;\r\n        }\r\n\r\n        $(`#stockBar`).addClass(`loaded`);\r\n\r\n        return (\r\n        <div key={`profile${index}`}  id={`${stockProfile.symbol}`} className={`companyElement profile-${index} ${stockProfile.symbol}`}>\r\n            <a href={website} target=\"_blank\" title={name}>\r\n                <img className=\"companyIcon\" src={image} alt=\"Company Image\"></img>\r\n                <span className={`companySymbol ${officialSymbol}`}>{officialSymbol}</span>\r\n                <span className={`companyChanges ${condition}`}>{plus} {changes}</span>\r\n            </a>\r\n        </div>\r\n        )\r\n    });\r\n\r\n    return (\r\n      <div className=\"App\">\r\n        <Header />\r\n        <Stockbar state={this.state} />\r\n        <Main state={this.state} />\r\n        <Footer />\r\n      </div>\r\n    );  \r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}