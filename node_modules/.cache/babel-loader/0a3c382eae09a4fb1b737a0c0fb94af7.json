{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\massa\\\\OneDrive\\\\Desktop\\\\Coding\\\\Whats-Your-Deal\\\\src\\\\components\\\\StockBar\\\\stockbar.jsx\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport $ from 'jquery';\nimport \"./sass/stockbar.css\";\nimport \"./css/customCSS.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Stockbar extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      loading: true,\n      stocks: [],\n      profiles: []\n    };\n  }\n\n  async componentDidMount(stockList, stockElement, companyRow, companyImage, profileList) {\n    $(`#stockBar`).hide();\n    const stockAPIURL = `https://financialmodelingprep.com/api/v3/available-traded/list?limit=100&apikey=7e60778244bbb11a3e59192e565ed625`;\n    const response = await fetch(stockAPIURL);\n    stockList = await response.json();\n    stockList.splice(100);\n    this.setState({\n      stocks: stockList,\n      loading: false\n    });\n    stockList.map((stock, index) => {\n      const profileURL = `https://stock-exchange-dot-full-stack-course-services.ew.r.appspot.com/api/v3/company/profile/${stock.symbol}`;\n      fetch(profileURL).then(newResponse => newResponse.json()).then(profileList => {\n        this.setState(previousState => ({\n          profiles: [...previousState.profiles, profileList]\n        })); // console.log(`Stock Data State:`);\n        // console.log(this.state.stocks);\n        // console.log(`Stock Profiles State:`);\n        // console.log(this.state.profiles);\n      });\n      console.log(`Stock Data State:`);\n      console.log(this.state.stocks);\n      console.log(`Stock Profiles State:`);\n      console.log(this.state.profiles);\n    });\n  }\n\n  render() {\n    let profileArray = [...this.state.profiles] || JSON.parse(localStorage.getItem(`Profiles List`)) || [];\n    profileArray.splice(100);\n\n    if (!this.state.profiles.length) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Didnt get Stocks\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 20\n      }, this);\n    }\n\n    if (this.state.loading) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 20\n      }, this);\n    }\n\n    const stockProfileBarRender = profileArray.map((stockProfile, index) => {\n      let emptyString = `Nothing to Show`;\n      let placeHolderImage = `https://raw.githubusercontent.com/strawhat19/Whats-Your-Deal/main/public/assets/Stock-Icon-Circle-Icon.png`;\n      let stockProf = stockProfile.profile || emptyString;\n      let plus = ``;\n      let condition = ``;\n      let image = stockProf.image || placeHolderImage;\n      let website = stockProf.website || emptyString;\n      let changes = stockProf.changes || emptyString;\n      let name = stockProf.companyName || emptyString;\n      let price = stockProf.price || emptyString;\n      let address = stockProf.address || emptyString;\n      let ceo = stockProf.ceo || emptyString;\n      let changesPercentage = stockProf.changesPercentage || emptyString;\n      let country = stockProf.country || emptyString;\n      let currency = stockProf.currency || emptyString;\n      let industry = stockProf.industry || emptyString;\n      let description = stockProf.description || emptyString;\n      let exchange = stockProf.exchange || emptyString;\n      let fullTimeEmployees = stockProf.fullTimeEmployees || emptyString;\n      let sector = stockProf.sector || emptyString;\n      let city = stockProf.city || emptyString;\n      let state = stockProf.state || emptyString;\n      let zip = stockProf.zip || emptyString; // Filtering for Price Increase or Decrease\n\n      if (changes >= 0) {\n        condition = `positive`;\n        plus = `+`;\n      } else {\n        condition = `negative`;\n      }\n\n      $(`#stockBar`).addClass(`loaded`);\n      $(`.stockBar.loaded`).fadeIn(5000);\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        id: `${stockProfile.symbol}`,\n        className: `companyElement profile-${index} ${stockProfile.symbol}`,\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          href: website,\n          target: \"_blank\",\n          title: name,\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"companyIcon\",\n            src: image,\n            alt: \"Company Image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: `companySymbol ${stockProfile.symbol}`,\n            children: stockProfile.symbol\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: `companyChanges ${condition}`,\n            children: [plus, \" \", changes]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 17\n        }, this)\n      }, `profile${index}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 13\n      }, this);\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"stockBar\",\n      className: `stockBar`,\n      children: stockProfileBarRender\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }, this);\n  }\n\n} // Custom Stock Object\n\nclass Stock {\n  constructor(name, symbol) {\n    this.name = name;\n    this.symbol = symbol;\n  }\n\n  logInfo() {\n    Object.values(this).map(value => {\n      console.log(value);\n    });\n  }\n\n}","map":{"version":3,"sources":["C:/Users/massa/OneDrive/Desktop/Coding/Whats-Your-Deal/src/components/StockBar/stockbar.jsx"],"names":["React","ReactDOM","$","Stockbar","Component","state","loading","stocks","profiles","componentDidMount","stockList","stockElement","companyRow","companyImage","profileList","hide","stockAPIURL","response","fetch","json","splice","setState","map","stock","index","profileURL","symbol","then","newResponse","previousState","console","log","render","profileArray","JSON","parse","localStorage","getItem","length","stockProfileBarRender","stockProfile","emptyString","placeHolderImage","stockProf","profile","plus","condition","image","website","changes","name","companyName","price","address","ceo","changesPercentage","country","currency","industry","description","exchange","fullTimeEmployees","sector","city","zip","addClass","fadeIn","Stock","constructor","logInfo","Object","values","value"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,CAAP,MAAc,QAAd;AACA,OAAO,qBAAP;AACA,OAAO,qBAAP;;AAEA,eAAe,MAAMC,QAAN,SAAuBH,KAAK,CAACI,SAA7B,CAAuC;AAAA;AAAA;AAAA,SAElDC,KAFkD,GAE1C;AACJC,MAAAA,OAAO,EAAE,IADL;AAEJC,MAAAA,MAAM,EAAE,EAFJ;AAGJC,MAAAA,QAAQ,EAAE;AAHN,KAF0C;AAAA;;AAQ3B,QAAjBC,iBAAiB,CAACC,SAAD,EAAYC,YAAZ,EAA0BC,UAA1B,EAAsCC,YAAtC,EAAoDC,WAApD,EAAiE;AAEpFZ,IAAAA,CAAC,CAAE,WAAF,CAAD,CAAea,IAAf;AAEA,UAAMC,WAAW,GAAI,kHAArB;AACA,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACF,WAAD,CAA5B;AACAN,IAAAA,SAAS,GAAG,MAAMO,QAAQ,CAACE,IAAT,EAAlB;AACAT,IAAAA,SAAS,CAACU,MAAV,CAAiB,GAAjB;AAEA,SAAKC,QAAL,CAAc;AAAEd,MAAAA,MAAM,EAAGG,SAAX;AAAsBJ,MAAAA,OAAO,EAAE;AAA/B,KAAd;AAEAI,IAAAA,SAAS,CAACY,GAAV,CAAc,CAACC,KAAD,EAAOC,KAAP,KAAiB;AAC3B,YAAMC,UAAU,GAAI,iGAAgGF,KAAK,CAACG,MAAO,EAAjI;AACAR,MAAAA,KAAK,CAACO,UAAD,CAAL,CAAkBE,IAAlB,CAAuBC,WAAW,IAAIA,WAAW,CAACT,IAAZ,EAAtC,EAA0DQ,IAA1D,CAA+Db,WAAW,IAAI;AAC1E,aAAKO,QAAL,CAAcQ,aAAa,KAAK;AAC5BrB,UAAAA,QAAQ,EAAE,CAAC,GAAGqB,aAAa,CAACrB,QAAlB,EAA4BM,WAA5B;AADkB,SAAL,CAA3B,EAD0E,CAI1E;AACA;AACA;AACA;AACH,OARD;AASAgB,MAAAA,OAAO,CAACC,GAAR,CAAa,mBAAb;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAK1B,KAAL,CAAWE,MAAvB;AACAuB,MAAAA,OAAO,CAACC,GAAR,CAAa,uBAAb;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAK1B,KAAL,CAAWG,QAAvB;AACH,KAfD;AAgBH;;AAEDwB,EAAAA,MAAM,GAAG;AAEL,QAAIC,YAAY,GAAG,CAAC,GAAG,KAAK5B,KAAL,CAAWG,QAAf,KAA4B0B,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAsB,eAAtB,CAAX,CAA5B,IAAiF,EAApG;AACAJ,IAAAA,YAAY,CAACb,MAAb,CAAoB,GAApB;;AAEA,QAAI,CAAC,KAAKf,KAAL,CAAWG,QAAX,CAAoB8B,MAAzB,EAAiC;AAC7B,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACH;;AACD,QAAI,KAAKjC,KAAL,CAAWC,OAAf,EAAwB;AACpB,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACH;;AAED,UAAMiC,qBAAqB,GAAGN,YAAY,CAACX,GAAb,CAAiB,CAACkB,YAAD,EAAchB,KAAd,KAAwB;AAEnE,UAAIiB,WAAW,GAAI,iBAAnB;AACA,UAAIC,gBAAgB,GAAI,4GAAxB;AACA,UAAIC,SAAS,GAAGH,YAAY,CAACI,OAAb,IAAwBH,WAAxC;AACA,UAAII,IAAI,GAAI,EAAZ;AACA,UAAIC,SAAS,GAAI,EAAjB;AACA,UAAIC,KAAK,GAAGJ,SAAS,CAACI,KAAV,IAAmBL,gBAA/B;AACA,UAAIM,OAAO,GAAGL,SAAS,CAACK,OAAV,IAAqBP,WAAnC;AACA,UAAIQ,OAAO,GAAGN,SAAS,CAACM,OAAV,IAAqBR,WAAnC;AACA,UAAIS,IAAI,GAAGP,SAAS,CAACQ,WAAV,IAAyBV,WAApC;AACA,UAAIW,KAAK,GAAGT,SAAS,CAACS,KAAV,IAAmBX,WAA/B;AACA,UAAIY,OAAO,GAAGV,SAAS,CAACU,OAAV,IAAqBZ,WAAnC;AACA,UAAIa,GAAG,GAAGX,SAAS,CAACW,GAAV,IAAiBb,WAA3B;AACA,UAAIc,iBAAiB,GAAGZ,SAAS,CAACY,iBAAV,IAA+Bd,WAAvD;AACA,UAAIe,OAAO,GAAGb,SAAS,CAACa,OAAV,IAAqBf,WAAnC;AACA,UAAIgB,QAAQ,GAAGd,SAAS,CAACc,QAAV,IAAsBhB,WAArC;AACA,UAAIiB,QAAQ,GAAGf,SAAS,CAACe,QAAV,IAAsBjB,WAArC;AACA,UAAIkB,WAAW,GAAGhB,SAAS,CAACgB,WAAV,IAAyBlB,WAA3C;AACA,UAAImB,QAAQ,GAAGjB,SAAS,CAACiB,QAAV,IAAsBnB,WAArC;AACA,UAAIoB,iBAAiB,GAAGlB,SAAS,CAACkB,iBAAV,IAA+BpB,WAAvD;AACA,UAAIqB,MAAM,GAAGnB,SAAS,CAACmB,MAAV,IAAoBrB,WAAjC;AACA,UAAIsB,IAAI,GAAGpB,SAAS,CAACoB,IAAV,IAAkBtB,WAA7B;AACA,UAAIpC,KAAK,GAAGsC,SAAS,CAACtC,KAAV,IAAmBoC,WAA/B;AACA,UAAIuB,GAAG,GAAGrB,SAAS,CAACqB,GAAV,IAAiBvB,WAA3B,CAxBmE,CA0BnE;;AACA,UAAIQ,OAAO,IAAI,CAAf,EAAkB;AACdH,QAAAA,SAAS,GAAI,UAAb;AACAD,QAAAA,IAAI,GAAI,GAAR;AACH,OAHD,MAGQ;AACJC,QAAAA,SAAS,GAAI,UAAb;AACH;;AAED5C,MAAAA,CAAC,CAAE,WAAF,CAAD,CAAe+D,QAAf,CAAyB,QAAzB;AACA/D,MAAAA,CAAC,CAAE,kBAAF,CAAD,CAAsBgE,MAAtB,CAA6B,IAA7B;AAEA,0BACA;AAA8B,QAAA,EAAE,EAAG,GAAE1B,YAAY,CAACd,MAAO,EAAzD;AAA4D,QAAA,SAAS,EAAG,0BAAyBF,KAAM,IAAGgB,YAAY,CAACd,MAAO,EAA9H;AAAA,+BACI;AAAG,UAAA,IAAI,EAAEsB,OAAT;AAAkB,UAAA,MAAM,EAAC,QAAzB;AAAkC,UAAA,KAAK,EAAEE,IAAzC;AAAA,kCACI;AAAK,YAAA,SAAS,EAAC,aAAf;AAA6B,YAAA,GAAG,EAAEH,KAAlC;AAAyC,YAAA,GAAG,EAAC;AAA7C;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAM,YAAA,SAAS,EAAG,iBAAgBP,YAAY,CAACd,MAAO,EAAtD;AAAA,sBAA0Dc,YAAY,CAACd;AAAvE;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAGI;AAAM,YAAA,SAAS,EAAG,kBAAiBoB,SAAU,EAA7C;AAAA,uBAAiDD,IAAjD,OAAwDI,OAAxD;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ,SAAW,UAASzB,KAAM,EAA1B;AAAA;AAAA;AAAA;AAAA,cADA;AASH,KA9C6B,CAA9B;AAgDA,wBACI;AAAK,MAAA,EAAE,EAAC,UAAR;AAAmB,MAAA,SAAS,EAAG,UAA/B;AAAA,gBACKe;AADL;AAAA;AAAA;AAAA;AAAA,YADJ;AAKH;;AAtGiD,C,CAyGnD;;AACA,MAAM4B,KAAN,CAAY;AACXC,EAAAA,WAAW,CAAClB,IAAD,EAAMxB,MAAN,EAAc;AACrB,SAAKwB,IAAL,GAAYA,IAAZ;AACA,SAAKxB,MAAL,GAAcA,MAAd;AACH;;AAED2C,EAAAA,OAAO,GAAG;AACNC,IAAAA,MAAM,CAACC,MAAP,CAAc,IAAd,EAAoBjD,GAApB,CAAwBkD,KAAK,IAAI;AAC7B1C,MAAAA,OAAO,CAACC,GAAR,CAAYyC,KAAZ;AACH,KAFD;AAGH;;AAVU","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport $ from 'jquery';\r\nimport \"./sass/stockbar.css\";\r\nimport \"./css/customCSS.css\";\r\n\r\nexport default class Stockbar extends React.Component {\r\n\r\n    state = {\r\n        loading: true,\r\n        stocks: [],\r\n        profiles: []\r\n    }\r\n\r\n    async componentDidMount(stockList, stockElement, companyRow, companyImage, profileList) {\r\n\r\n        $(`#stockBar`).hide();\r\n\r\n        const stockAPIURL = `https://financialmodelingprep.com/api/v3/available-traded/list?limit=100&apikey=7e60778244bbb11a3e59192e565ed625`;\r\n        const response = await fetch(stockAPIURL);\r\n        stockList = await response.json();\r\n        stockList.splice(100);\r\n\r\n        this.setState({ stocks : stockList, loading: false});\r\n\r\n        stockList.map((stock,index) => {\r\n            const profileURL = `https://stock-exchange-dot-full-stack-course-services.ew.r.appspot.com/api/v3/company/profile/${stock.symbol}`;\r\n            fetch(profileURL).then(newResponse => newResponse.json()).then(profileList => {\r\n                this.setState(previousState => ({\r\n                    profiles: [...previousState.profiles, profileList]\r\n                }));\r\n                // console.log(`Stock Data State:`);\r\n                // console.log(this.state.stocks);\r\n                // console.log(`Stock Profiles State:`);\r\n                // console.log(this.state.profiles);\r\n            })\r\n            console.log(`Stock Data State:`);\r\n            console.log(this.state.stocks);\r\n            console.log(`Stock Profiles State:`);\r\n            console.log(this.state.profiles);\r\n        })\r\n    }\r\n\r\n    render() {\r\n\r\n        let profileArray = [...this.state.profiles] || JSON.parse(localStorage.getItem(`Profiles List`)) || [];\r\n        profileArray.splice(100);\r\n\r\n        if (!this.state.profiles.length) {\r\n            return <div>Didnt get Stocks</div>\r\n        }\r\n        if (this.state.loading) {\r\n            return <div>Loading...</div>\r\n        }\r\n\r\n        const stockProfileBarRender = profileArray.map((stockProfile,index) => {\r\n\r\n            let emptyString = `Nothing to Show`;\r\n            let placeHolderImage = `https://raw.githubusercontent.com/strawhat19/Whats-Your-Deal/main/public/assets/Stock-Icon-Circle-Icon.png`;\r\n            let stockProf = stockProfile.profile || emptyString;\r\n            let plus = ``;\r\n            let condition = ``;\r\n            let image = stockProf.image || placeHolderImage;\r\n            let website = stockProf.website || emptyString;\r\n            let changes = stockProf.changes || emptyString;\r\n            let name = stockProf.companyName || emptyString;\r\n            let price = stockProf.price || emptyString;\r\n            let address = stockProf.address || emptyString;\r\n            let ceo = stockProf.ceo || emptyString;\r\n            let changesPercentage = stockProf.changesPercentage || emptyString;\r\n            let country = stockProf.country || emptyString;\r\n            let currency = stockProf.currency || emptyString;\r\n            let industry = stockProf.industry || emptyString;\r\n            let description = stockProf.description || emptyString;\r\n            let exchange = stockProf.exchange || emptyString;\r\n            let fullTimeEmployees = stockProf.fullTimeEmployees || emptyString;\r\n            let sector = stockProf.sector || emptyString;\r\n            let city = stockProf.city || emptyString;\r\n            let state = stockProf.state || emptyString;\r\n            let zip = stockProf.zip || emptyString;\r\n\r\n            // Filtering for Price Increase or Decrease\r\n            if (changes >= 0) {\r\n                condition = `positive`;\r\n                plus = `+`;\r\n            }  else {\r\n                condition = `negative`;\r\n            }\r\n\r\n            $(`#stockBar`).addClass(`loaded`);\r\n            $(`.stockBar.loaded`).fadeIn(5000);\r\n\r\n            return (\r\n            <div key={`profile${index}`}  id={`${stockProfile.symbol}`} className={`companyElement profile-${index} ${stockProfile.symbol}`}>\r\n                <a href={website} target=\"_blank\" title={name}>\r\n                    <img className=\"companyIcon\" src={image} alt=\"Company Image\"></img>\r\n                    <span className={`companySymbol ${stockProfile.symbol}`}>{stockProfile.symbol}</span>\r\n                    <span className={`companyChanges ${condition}`}>{plus} {changes}</span>\r\n                </a>\r\n            </div>\r\n            )\r\n        });\r\n\r\n        return (\r\n            <div id=\"stockBar\" className={`stockBar`}>\r\n                {stockProfileBarRender}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n   // Custom Stock Object\r\n   class Stock {\r\n    constructor(name,symbol) {\r\n        this.name = name;\r\n        this.symbol = symbol;\r\n    }\r\n\r\n    logInfo() {\r\n        Object.values(this).map(value => {\r\n            console.log(value);\r\n        })\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}