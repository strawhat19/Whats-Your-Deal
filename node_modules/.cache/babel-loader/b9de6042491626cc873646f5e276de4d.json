{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\massa\\\\OneDrive\\\\Desktop\\\\Coding\\\\Whats-Your-Deal\\\\src\\\\components\\\\Main\\\\states\\\\Company\\\\company.jsx\";\nimport React from 'react';\nimport \"./sass/company.css\";\nimport \"./css/customCSS.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Company extends React.Component {\n  async componentDidMount(companySymbol, copmany, profile) {\n    // Declaring Constants\n    const companyDash = document.querySelector(`.companyDash`);\n    const companyData = document.querySelector(`.companyData`);\n    const companyChart = document.querySelector(`.companyChart`);\n    const companyChartCanvas = document.getElementById(`lineChart`); // companySymbol = window.location.search.replace(\"?symbol=\", \"\");\n\n    companySymbol = `AAPL`; // Getting Profiles\n\n    const profileResponse = await fetch(`https://stock-exchange-dot-full-stack-course-services.ew.r.appspot.com/api/v3/company/profile/${companySymbol}`);\n    profile = await profileResponse.json();\n    let {\n      profile: {\n        price,\n        image,\n        industry,\n        companyName: name,\n        changes,\n        description,\n        website,\n        changesPercentage: percent\n      },\n      symbol\n    } = profile;\n    let plus = ``;\n    let condition = ``; // Filtering for Price Increase or Decrease\n\n    if (changes >= 0) {\n      condition = `positive`;\n      plus = `+`;\n    } else {\n      condition = `negative`;\n    } // Taking Destructured Objects and injecting them into the markdown\n\n\n    companyData.innerHTML = `\n        <div class=\"companyTitleRow\">\n            <img src=\"${image}\" class=\"companyImage\" alt=\"${companySymbol}\">\n            <a href=\"${website}\" target=\"_blank\" title=\"${companySymbol}\">\n                <span class=\"companyName\">${name}</span>\n                <span class=\"industry\">(${industry})</span>\n            </a>\n        </div>\n        <div class=\"stockPrice\">Stock Price: $${price} <span class=\"companyChanges ${condition}\">(${plus}${changes}%)</span></div>\n        <p class=\"companyDescription\"><span>Description:</span> ${description}</p>\n        `;\n\n    if (industry === ``) {\n      document.querySelector(`.industry`).innerHTML = `(${companySymbol})`;\n    }\n\n    if (website === ``) {\n      document.querySelector(`.companyTitleRow a`).setAttribute(`href`, `../`);\n    } // Image Fixing\n\n\n    const images = document.querySelectorAll(`img`);\n    images.forEach(image => {\n      image.addEventListener(`error`, event => {\n        event.target.src = `../img/Stock-Icon-Circle-Icon.svg`;\n      });\n    }); // Getting History\n\n    const profileHistory = await fetch(`https://stock-exchange-dot-full-stack-course-services.ew.r.appspot.com/api/v3/historical-price-full/${companySymbol}?serietype=line`);\n    history = await profileHistory.json();\n    history.historical.splice(15);\n    let datesArray = [];\n    let pricesArray = [];\n    history.historical.forEach(date => {\n      let month = date.date.split(`-`)[1];\n      let day = date.date.split(`-`)[2];\n      let monthDay = month + ` -` + day;\n      datesArray.push(monthDay);\n      localStorage.setItem(`Dates`, JSON.stringify(datesArray));\n      pricesArray.push(date.close);\n      localStorage.setItem(`Prices`, JSON.stringify(pricesArray));\n    }); // companyChartCanvas\n\n    const lineChart = new Chart(companyChartCanvas, {\n      type: `line`,\n      data: {\n        labels: JSON.parse(localStorage.getItem(`Dates`)).reverse(),\n        datasets: [{\n          label: `Company Growth`,\n          backgroundColor: `rgba(222, 28, 28, 50%)`,\n          borderColor: `#de1c1c`,\n          fill: true,\n          pointRadius: 1,\n          responsive: true,\n          data: JSON.parse(localStorage.getItem(`Prices`)).reverse()\n        }]\n      }\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"company\",\n      id: \"company\",\n      children: [/*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"../\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          class: \"nasdaq\",\n          children: \"NASDAQ EXCHANGE\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 31\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"companyDash\",\n        id: \"companyDash\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"companyData\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"companyChart\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"chartTitle\",\n            children: \"Company Growth over the past 15 Business Days\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n            class: \"lineChart\",\n            id: \"lineChart\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/massa/OneDrive/Desktop/Coding/Whats-Your-Deal/src/components/Main/states/Company/company.jsx"],"names":["React","Company","Component","componentDidMount","companySymbol","copmany","profile","companyDash","document","querySelector","companyData","companyChart","companyChartCanvas","getElementById","profileResponse","fetch","json","price","image","industry","companyName","name","changes","description","website","changesPercentage","percent","symbol","plus","condition","innerHTML","setAttribute","images","querySelectorAll","forEach","addEventListener","event","target","src","profileHistory","history","historical","splice","datesArray","pricesArray","date","month","split","day","monthDay","push","localStorage","setItem","JSON","stringify","close","lineChart","Chart","type","data","labels","parse","getItem","reverse","datasets","label","backgroundColor","borderColor","fill","pointRadius","responsive","render"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport \"./sass/company.css\";\r\nimport \"./css/customCSS.css\";\r\n\r\nexport default class Company extends React.Component {\r\n\r\n    async componentDidMount(companySymbol,copmany,profile) {   \r\n\r\n        // Declaring Constants\r\n        const companyDash = document.querySelector(`.companyDash`);\r\n        const companyData = document.querySelector(`.companyData`);\r\n        const companyChart = document.querySelector(`.companyChart`);\r\n        const companyChartCanvas = document.getElementById(`lineChart`);\r\n        // companySymbol = window.location.search.replace(\"?symbol=\", \"\");\r\n        companySymbol = `AAPL`;\r\n\r\n        // Getting Profiles\r\n        const profileResponse = await fetch(`https://stock-exchange-dot-full-stack-course-services.ew.r.appspot.com/api/v3/company/profile/${companySymbol}`);\r\n\r\n        profile = await profileResponse.json();\r\n        let {profile: {price,image,industry,companyName:name,changes,description,website,changesPercentage:percent},symbol} = profile;\r\n\r\n        let plus = ``;\r\n        let condition = ``;\r\n\r\n        // Filtering for Price Increase or Decrease\r\n        if (changes >= 0) {\r\n        condition = `positive`;\r\n        plus = `+`;\r\n        }  else {\r\n        condition = `negative`;\r\n        }\r\n\r\n        // Taking Destructured Objects and injecting them into the markdown\r\n        companyData.innerHTML = `\r\n        <div class=\"companyTitleRow\">\r\n            <img src=\"${image}\" class=\"companyImage\" alt=\"${companySymbol}\">\r\n            <a href=\"${website}\" target=\"_blank\" title=\"${companySymbol}\">\r\n                <span class=\"companyName\">${name}</span>\r\n                <span class=\"industry\">(${industry})</span>\r\n            </a>\r\n        </div>\r\n        <div class=\"stockPrice\">Stock Price: $${price} <span class=\"companyChanges ${condition}\">(${plus}${changes}%)</span></div>\r\n        <p class=\"companyDescription\"><span>Description:</span> ${description}</p>\r\n        `;\r\n\r\n        if (industry === ``) {\r\n        document.querySelector(`.industry`).innerHTML = `(${companySymbol})`;\r\n        }\r\n\r\n        if (website === ``) {\r\n        document.querySelector(`.companyTitleRow a`).setAttribute(`href`,`../`);\r\n        }\r\n\r\n        // Image Fixing\r\n        const images = document.querySelectorAll(`img`);\r\n        images.forEach(image => {\r\n            image.addEventListener(`error`,event => {\r\n            event.target.src=`../img/Stock-Icon-Circle-Icon.svg`;\r\n            })\r\n        })\r\n\r\n        // Getting History\r\n        const profileHistory = await fetch(`https://stock-exchange-dot-full-stack-course-services.ew.r.appspot.com/api/v3/historical-price-full/${companySymbol}?serietype=line`);\r\n        history = await profileHistory.json();\r\n        history.historical.splice(15);\r\n\r\n        let datesArray = [];\r\n        let pricesArray = [];\r\n\r\n        history.historical.forEach(date => {\r\n        let month = date.date.split(`-`)[1];\r\n        let day = date.date.split(`-`)[2];\r\n        let monthDay = month + ` -` + day;\r\n        datesArray.push(monthDay);\r\n        localStorage.setItem(`Dates`, JSON.stringify(datesArray));\r\n        pricesArray.push(date.close);\r\n        localStorage.setItem(`Prices`, JSON.stringify(pricesArray));\r\n        })\r\n\r\n        // companyChartCanvas\r\n        const lineChart = new Chart(companyChartCanvas, {\r\n        type: `line`,\r\n        data: {\r\n                labels: JSON.parse(localStorage.getItem(`Dates`)).reverse(),\r\n                datasets: [{\r\n                    label: `Company Growth`,\r\n                    backgroundColor: `rgba(222, 28, 28, 50%)`,\r\n                    borderColor: `#de1c1c`,\r\n                    fill: true,\r\n                    pointRadius: 1,\r\n                    responsive: true,\r\n                    data: JSON.parse(localStorage.getItem(`Prices`)).reverse()\r\n                }]\r\n            }\r\n        })\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"company\" id=\"company\">\r\n                <a href=\"../\"><h1 class=\"nasdaq\">NASDAQ EXCHANGE</h1></a>\r\n                <div class=\"companyDash\" id=\"companyDash\">\r\n                    <div class=\"companyData\"></div>\r\n                    <div class=\"companyChart\">\r\n                        <div class=\"chartTitle\">Company Growth over the past 15 Business Days</div>\r\n                        <canvas class=\"lineChart\" id=\"lineChart\"></canvas>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}