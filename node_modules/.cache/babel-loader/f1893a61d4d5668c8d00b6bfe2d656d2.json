{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\massa\\\\OneDrive\\\\Desktop\\\\Coding\\\\Whats-Your-Deal\\\\src\\\\components\\\\StockBar\\\\stockbar.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport \"./sass/stockbar.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Stockbar(stockBar, stockElement, companyRow, profilesArray, stockList) {\n  _s();\n\n  const [isStockList, setIsStockList] = React.useState(false);\n\n  const isntStockList = () => {\n    setIsStockList(false);\n  };\n\n  const IsStockList = () => {\n    setIsStockList(true);\n  };\n\n  stockBar = document.getElementById(`stockBar`);\n  profilesArray = JSON.parse(localStorage.getItem('Profiles List')) || []; // fetch(`https://financialmodelingprep.com/api/v3/available-traded/list?apikey=7e60778244bbb11a3e59192e565ed625`)\n  // .then(response => {\n  //     return response.json();\n  // }).then(data => {\n  //     data.splice(100);\n  //     stockList = [...new Set(data)];\n\n  stockList = JSON.parse(localStorage.getItem('Stock List')) || [];\n  console.log('Stock API Data Is:');\n  console.log(stockList);\n  localStorage.setItem(`Stock List`, JSON.stringify(stockList));\n  stockList.shift();\n  let stockListModded = stockList;\n  console.log('Stock List Modded:');\n  console.log(stockListModded);\n  stockList.forEach((company, index) => {\n    let profileURL = `https://stock-exchange-dot-full-stack-course-services.ew.r.appspot.com/api/v3/company/profile/${company.symbol}`;\n    fetch(profileURL).then(newResponse => newResponse.json()).then(profileData => {\n      // Reinitializing Profile Array\n      profilesArray.push(profileData);\n      localStorage.setItem(`Profiles List`, JSON.stringify(profilesArray));\n      profilesArray.forEach((companyProfile, index) => {\n        // Begin Profiles Array // Search Results Function\n        let plus = ``;\n        let condition = ``;\n        let symbol = companyProfile.symbol;\n        let image = companyProfile.profile.image;\n        let changes = companyProfile.profile.changes.toFixed(2);\n        let name = companyProfile.profile.companyName; // Filtering for Price Increase or Decrease\n\n        if (changes >= 0) {\n          condition = `positive`;\n          plus = `+`;\n        } else {\n          condition = `negative`;\n        } // Creating Rows for Each Company\n\n\n        companyRow = document.createElement(`div`);\n        let companyImage = document.createElement(`img`); // Creating Image for Each Company\n        // Setting the Attributes of the Company Image\n\n        companyImage.setAttribute(`src`, image);\n        companyImage.setAttribute(`class`, `companyIcon`);\n        companyImage.setAttribute(`height`, `100px`);\n        companyImage.setAttribute(`width`, `100px`); // Setting the Attributes of the Company Rows\n\n        companyRow.setAttribute(`class`, `companyRow`); // Creating a New Element to Contain Company Data\n\n        let companyElement = document.createElement(`a`);\n        companyElement.setAttribute(`href`, `./html/company.html?symbol=${symbol}`);\n        companyElement.setAttribute(`class`, `çompanyElement`);\n        companyElement.setAttribute(`ìd`, index + 1);\n        companyElement.innerHTML = `\n                    <span class=\"companyName\">${name}</span> \n                    <span class=\"companySymbol\">(${symbol})</span>\n                    <span class=\"companyChanges ${condition}\">(${plus}${changes})</span>`; // Injecting the Elements we Created into the Rows\n\n        companyRow.prepend(companyImage);\n        companyRow.append(companyElement); // Returning the Company Row\n\n        return companyRow; // End Search Results Function\n      }); // Abstracted this code so it only appends rows on full word input\n\n      stockBar.append(companyRow); // Image Fixing\n\n      const images = document.querySelectorAll(`img`);\n      images.forEach(image => {\n        image.addEventListener(`error`, event => {\n          event.target.src = `../img/Stock-Icon-Circle-Icon.svg`;\n        });\n      }); // let searchTerm = 'Hello';\n      // // Highlighting Searched Text on Company Names\n      // const companyNames = document.querySelectorAll(`.companyName`);\n      // companyNames.forEach(name => {\n      // let filteredCharacters = searchTerm.replace(/[.*+?^${}()|[\\]\\\\]/g,\"\\\\$&\");\n      // let filter = new RegExp(`${filteredCharacters}`,`gi`);\n      // name.innerHTML = name.textContent.replace(filter,match => `<mark>${match}</mark>`);\n      // })\n      // // Highlighting Searched Text on Company Symbols\n      // const companySymbols = document.querySelectorAll(`.companySymbol`);\n      // companySymbols.forEach(symbol => {\n      // let filteredCharacters = searchTerm.replace(/[.*+?^${}()|[\\]\\\\]/g,\"\\\\$&\");\n      // let filter = new RegExp(`${filteredCharacters}`,`gi`);\n      // symbol.innerHTML = symbol.textContent.replace(filter,match => `<mark>${match}</mark>`);\n      // })\n    });\n    stockElement = document.createElement(`div`);\n    stockElement.setAttribute(`class`, `stockElement`); // Add symbol with a price\n\n    let companyElement = document.createElement(`a`);\n    let companyImage = document.createElement(`img`); // Creating Image for Each Company\n    // Setting the Attributes of the Company Image\n\n    companyImage.setAttribute(`src`, company);\n    companyImage.setAttribute(`class`, `companyIcon`);\n    companyImage.setAttribute(`height`, `100px`);\n    companyImage.setAttribute(`width`, `100px`);\n    companyElement.setAttribute(`href`, `./html/company.html?symbol=${company.symbol}`);\n    companyElement.setAttribute(`class`, `companyElement ${company.symbol}`);\n    companyElement.setAttribute(`ìd`, index + 1);\n    stockElement.innerHTML = `${company.symbol} <span class=\"positive\"> | (${company.price})</span>`;\n    companyElement.append(stockElement);\n    stockBar.append(companyElement);\n  }); // }) // End Primary Fetch\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"stockBar marquee\",\n    id: \"stockBar\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 145,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Stockbar, \"NrbLR32G963E1MKu91UFT8nUNpM=\");\n\n_c = Stockbar;\nexport default Stockbar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Stockbar\");","map":{"version":3,"sources":["C:/Users/massa/OneDrive/Desktop/Coding/Whats-Your-Deal/src/components/StockBar/stockbar.jsx"],"names":["React","Stockbar","stockBar","stockElement","companyRow","profilesArray","stockList","isStockList","setIsStockList","useState","isntStockList","IsStockList","document","getElementById","JSON","parse","localStorage","getItem","console","log","setItem","stringify","shift","stockListModded","forEach","company","index","profileURL","symbol","fetch","then","newResponse","json","profileData","push","companyProfile","plus","condition","image","profile","changes","toFixed","name","companyName","createElement","companyImage","setAttribute","companyElement","innerHTML","prepend","append","images","querySelectorAll","addEventListener","event","target","src","price"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport \"./sass/stockbar.css\";\r\n\r\nfunction Stockbar(stockBar, stockElement, companyRow, profilesArray, stockList) {\r\n\r\n    const [isStockList, setIsStockList] = React.useState(false);\r\n\r\n    const isntStockList = () => {\r\n        setIsStockList(false);\r\n     };  \r\n     const IsStockList = () => {\r\n        setIsStockList(true);\r\n     };\r\n\r\n    stockBar = document.getElementById(`stockBar`);\r\n    profilesArray = JSON.parse(localStorage.getItem('Profiles List')) || [];\r\n\r\n    // fetch(`https://financialmodelingprep.com/api/v3/available-traded/list?apikey=7e60778244bbb11a3e59192e565ed625`)\r\n    // .then(response => {\r\n    //     return response.json();\r\n    // }).then(data => {\r\n\r\n    //     data.splice(100);\r\n    //     stockList = [...new Set(data)];\r\n        stockList = JSON.parse(localStorage.getItem('Stock List')) || [];\r\n        console.log('Stock API Data Is:');\r\n        console.log(stockList);\r\n        localStorage.setItem(`Stock List`, JSON.stringify(stockList));\r\n        stockList.shift();\r\n        let stockListModded = stockList;\r\n        console.log('Stock List Modded:');\r\n        console.log(stockListModded);\r\n\r\n        stockList.forEach((company, index) => {\r\n            let profileURL = `https://stock-exchange-dot-full-stack-course-services.ew.r.appspot.com/api/v3/company/profile/${company.symbol}`;\r\n            fetch(profileURL)\r\n                .then((newResponse) => newResponse.json())\r\n                .then((profileData) => {\r\n\r\n                // Reinitializing Profile Array\r\n                profilesArray.push(profileData);\r\n                localStorage.setItem(`Profiles List`, JSON.stringify(profilesArray));\r\n                profilesArray.forEach((companyProfile, index) => {\r\n\r\n                    // Begin Profiles Array // Search Results Function\r\n                    let plus = ``;\r\n                    let condition = ``;\r\n                    let symbol = companyProfile.symbol;\r\n                    let image = companyProfile.profile.image;\r\n                    let changes = companyProfile.profile.changes.toFixed(2);\r\n                    let name = companyProfile.profile.companyName;\r\n\r\n                    // Filtering for Price Increase or Decrease\r\n                    if (changes >= 0) {\r\n                        condition = `positive`;\r\n                        plus = `+`;\r\n                    }  else {\r\n                        condition = `negative`;\r\n                    }\r\n            \r\n                    // Creating Rows for Each Company\r\n                    companyRow = document.createElement(`div`);\r\n                    let companyImage = document.createElement(`img`); // Creating Image for Each Company\r\n        \r\n                    // Setting the Attributes of the Company Image\r\n                    companyImage.setAttribute(`src`, image);\r\n                    companyImage.setAttribute(`class`, `companyIcon`);\r\n                    companyImage.setAttribute(`height`, `100px`);\r\n                    companyImage.setAttribute(`width`, `100px`);\r\n\r\n                    // Setting the Attributes of the Company Rows\r\n                    companyRow.setAttribute(`class`, `companyRow`);\r\n\r\n                    // Creating a New Element to Contain Company Data\r\n                    let companyElement = document.createElement(`a`);\r\n                    companyElement.setAttribute(`href`,`./html/company.html?symbol=${symbol}`);\r\n                    companyElement.setAttribute(`class`,`çompanyElement`);\r\n                    companyElement.setAttribute(`ìd`, index + 1);\r\n                    companyElement.innerHTML = `\r\n                    <span class=\"companyName\">${name}</span> \r\n                    <span class=\"companySymbol\">(${symbol})</span>\r\n                    <span class=\"companyChanges ${condition}\">(${plus}${changes})</span>`; // Injecting the Elements we Created into the Rows\r\n                    companyRow.prepend(companyImage);\r\n                    companyRow.append(companyElement);\r\n\r\n                    // Returning the Company Row\r\n                    return companyRow;\r\n                    // End Search Results Function\r\n                });\r\n\r\n                // Abstracted this code so it only appends rows on full word input\r\n                stockBar.append(companyRow);\r\n\r\n                // Image Fixing\r\n                const images = document.querySelectorAll(`img`);\r\n                images.forEach(image => {\r\n                    image.addEventListener(`error`,event => {\r\n                        event.target.src=`../img/Stock-Icon-Circle-Icon.svg`;\r\n                    })\r\n                })\r\n\r\n                // let searchTerm = 'Hello';\r\n\r\n                // // Highlighting Searched Text on Company Names\r\n                // const companyNames = document.querySelectorAll(`.companyName`);\r\n                // companyNames.forEach(name => {\r\n                // let filteredCharacters = searchTerm.replace(/[.*+?^${}()|[\\]\\\\]/g,\"\\\\$&\");\r\n                // let filter = new RegExp(`${filteredCharacters}`,`gi`);\r\n                // name.innerHTML = name.textContent.replace(filter,match => `<mark>${match}</mark>`);\r\n                // })\r\n\r\n                // // Highlighting Searched Text on Company Symbols\r\n                // const companySymbols = document.querySelectorAll(`.companySymbol`);\r\n                // companySymbols.forEach(symbol => {\r\n                // let filteredCharacters = searchTerm.replace(/[.*+?^${}()|[\\]\\\\]/g,\"\\\\$&\");\r\n                // let filter = new RegExp(`${filteredCharacters}`,`gi`);\r\n                // symbol.innerHTML = symbol.textContent.replace(filter,match => `<mark>${match}</mark>`);\r\n                // })\r\n\r\n            });\r\n\r\n            stockElement = document.createElement(`div`);\r\n            stockElement.setAttribute(`class`,`stockElement`);\r\n\r\n            // Add symbol with a price\r\n            let companyElement = document.createElement(`a`);\r\n            let companyImage = document.createElement(`img`); // Creating Image for Each Company\r\n\r\n            // Setting the Attributes of the Company Image\r\n            companyImage.setAttribute(`src`, company);\r\n            companyImage.setAttribute(`class`, `companyIcon`);\r\n            companyImage.setAttribute(`height`, `100px`);\r\n            companyImage.setAttribute(`width`, `100px`);\r\n            companyElement.setAttribute(`href`,`./html/company.html?symbol=${company.symbol}`);\r\n            companyElement.setAttribute(`class`,`companyElement ${company.symbol}`);\r\n            companyElement.setAttribute(`ìd`, index + 1);\r\n            stockElement.innerHTML = `${company.symbol} <span class=\"positive\"> | (${company.price})</span>`;\r\n            companyElement.append(stockElement);\r\n            stockBar.append(companyElement);\r\n        });\r\n\r\n    // }) // End Primary Fetch\r\n\r\n    return (\r\n        <div className=\"stockBar marquee\" id=\"stockBar\"></div>\r\n    );\r\n}\r\n \r\nexport default Stockbar;"]},"metadata":{},"sourceType":"module"}