{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\massa\\\\OneDrive\\\\Desktop\\\\Coding\\\\Whats-Your-Deal\\\\src\\\\components\\\\StockBar\\\\stockbar.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport \"./sass/stockbar.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Stockbar(stockBar, stockElement, companyRow, companyImage, profilesArray, stockList) {\n  _s();\n\n  const title = /*#__PURE__*/React.createElement('h1', {}, 'My First React Code');\n  ReactDOM.render(title, document.getElementById('global'));\n  const [isStockList, setIsStockList] = React.useState(true);\n\n  const isntStockList = () => {\n    setIsStockList(false);\n  };\n\n  const IsStockList = () => {\n    setIsStockList(true);\n  };\n\n  window.addEventListener('DOMContentLoaded', event => {\n    stockBar = document.getElementById(`stockBar`);\n    profilesArray = JSON.parse(localStorage.getItem('Profiles List')) || []; // fetch(`https://financialmodelingprep.com/api/v3/available-traded/list?apikey=7e60778244bbb11a3e59192e565ed625`)\n    // .then(response => {\n    //     return response.json();\n    // }).then(data => {\n    //     data.splice(100);\n    //     stockList = [...new Set(data)];\n\n    stockList = JSON.parse(localStorage.getItem('Stock List')) || [];\n    console.log('Stock API Data Is:');\n    console.log(stockList); // localStorage.setItem(`Stock List`, JSON.stringify(stockList));\n\n    profilesArray.shift();\n    console.log('Profile List Modded:');\n    console.log(profilesArray);\n    stockList.forEach((company, index) => {\n      // let profileURL = `https://stock-exchange-dot-full-stack-course-services.ew.r.appspot.com/api/v3/company/profile/${company.symbol}`;\n      // fetch(profileURL)\n      //     .then((newResponse) => newResponse.json())\n      //     .then((profileData) => {\n      //     // Reinitializing Profile Array\n      //     profilesArray.push(profileData);\n      profilesArray = JSON.parse(localStorage.getItem('Profiles List')) || []; // localStorage.setItem(`Profiles List`, JSON.stringify(profilesArray));\n\n      profilesArray.forEach((companyProfile, index) => {\n        // Begin Profiles Array // Search Results Function\n        // let plus = ``;\n        // let condition = ``;\n        let symbol = companyProfile.symbol;\n        let name = companyProfile.profile.companyName; // let image = companyProfile.profile.image;\n        // let changes = companyProfile.profile.changes;\n        // Filtering for Price Increase or Decrease\n        // if (changes >= 0) {\n        //     condition = `positive`;\n        //     plus = `+`;\n        // }  else {\n        //     condition = `negative`;\n        // }\n        // Creating Rows for Each Company\n\n        companyRow = document.createElement(`div`); // companyImage = document.createElement(`img`); // Creating Image for Each Company\n        // Setting the Attributes of the Company Image\n        // companyImage.setAttribute(`src`, image);\n        // companyImage.setAttribute(`class`, `companyIcon`);\n        // companyImage.setAttribute(`height`, `100px`);\n        // companyImage.setAttribute(`width`, `100px`);\n        // Setting the Attributes of the Company Rows\n\n        companyRow.setAttribute(`class`, `companyRow`); // Creating a New Element to Contain Company Data\n\n        let companyElement = document.createElement(`a`);\n        companyElement.setAttribute(`href`, `./html/company.html?symbol=${symbol}`);\n        companyElement.setAttribute(`class`, `çompanyElement`);\n        companyElement.setAttribute(`ìd`, index + 1);\n        companyElement.innerHTML = `\n                        <span class=\"companyName\">${name}</span> \n                        <span class=\"companySymbol\">(${symbol})</span>\n                        <span class=\"companyChanges\">Hello</span>`; // Injecting the Elements we Created into the Rows\n        // <span class=\"companyChanges ${condition}\">(${plus}${changes})</span>`; // Injecting the Elements we Created into the Rows\n        // companyRow.prepend(companyImage);\n\n        companyRow.append(companyElement); // Returning the Company Row\n\n        return companyRow; // End Search Results Function\n      }); // Abstracted this code so it only appends rows on full word input\n\n      stockBar.append(companyRow); // Image Fixing\n      // const images = document.querySelectorAll(`img`);\n      // images.forEach(image => {\n      //     image.addEventListener(`error`,event => {\n      //         event.target.src=`../img/Stock-Icon-Circle-Icon.svg`;\n      //     })\n      // })\n      // let searchTerm = 'Hello';\n      // // Highlighting Searched Text on Company Names\n      // const companyNames = document.querySelectorAll(`.companyName`);\n      // companyNames.forEach(name => {\n      // let filteredCharacters = searchTerm.replace(/[.*+?^${}()|[\\]\\\\]/g,\"\\\\$&\");\n      // let filter = new RegExp(`${filteredCharacters}`,`gi`);\n      // name.innerHTML = name.textContent.replace(filter,match => `<mark>${match}</mark>`);\n      // })\n      // // Highlighting Searched Text on Company Symbols\n      // const companySymbols = document.querySelectorAll(`.companySymbol`);\n      // companySymbols.forEach(symbol => {\n      // let filteredCharacters = searchTerm.replace(/[.*+?^${}()|[\\]\\\\]/g,\"\\\\$&\");\n      // let filter = new RegExp(`${filteredCharacters}`,`gi`);\n      // symbol.innerHTML = symbol.textContent.replace(filter,match => `<mark>${match}</mark>`);\n      // })\n      // }); // Inner Fetch\n\n      stockElement = document.createElement(`div`);\n      stockElement.setAttribute(`class`, `stockElement`); // Add symbol with a price\n\n      let companyElement = document.createElement(`a`);\n      let companyImage = document.createElement(`img`); // Creating Image for Each Company\n      // Setting the Attributes of the Company Image\n\n      companyImage.setAttribute(`src`, company);\n      companyImage.setAttribute(`class`, `companyIcon`);\n      companyImage.setAttribute(`height`, `100px`);\n      companyImage.setAttribute(`width`, `100px`);\n      companyElement.setAttribute(`href`, `./html/company.html?symbol=${company.symbol}`);\n      companyElement.setAttribute(`class`, `companyElement ${company.symbol}`);\n      companyElement.setAttribute(`ìd`, index + 1);\n      stockElement.innerHTML = `${company.symbol} <span class=\"positive\"> | (${company.price})</span>`;\n      companyElement.append(stockElement);\n      stockBar.append(companyElement);\n    });\n  }); // }) // End Primary Fetch\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"stockBar marquee\",\n      id: \"stockBar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 157,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Stockbar, \"PrmkUdWQD3CfhrkF82aGcFxAkCk=\");\n\n_c = Stockbar;\nexport default Stockbar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Stockbar\");","map":{"version":3,"sources":["C:/Users/massa/OneDrive/Desktop/Coding/Whats-Your-Deal/src/components/StockBar/stockbar.jsx"],"names":["React","ReactDOM","Stockbar","stockBar","stockElement","companyRow","companyImage","profilesArray","stockList","title","createElement","render","document","getElementById","isStockList","setIsStockList","useState","isntStockList","IsStockList","window","addEventListener","event","JSON","parse","localStorage","getItem","console","log","shift","forEach","company","index","companyProfile","symbol","name","profile","companyName","setAttribute","companyElement","innerHTML","append","price"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport \"./sass/stockbar.css\";\r\n\r\nfunction Stockbar(stockBar, stockElement, companyRow, companyImage, profilesArray, stockList) {\r\n\r\n    const title = React.createElement('h1', {}, 'My First React Code');\r\n\r\n    ReactDOM.render(\r\n        title,\r\n        document.getElementById('global')\r\n      );\r\n\r\n    const [isStockList, setIsStockList] = React.useState(true);\r\n\r\n    const isntStockList = () => {\r\n        setIsStockList(false);\r\n     };  \r\n     const IsStockList = () => {\r\n        setIsStockList(true);\r\n     };\r\n\r\n    window.addEventListener('DOMContentLoaded', (event) => {\r\n        stockBar = document.getElementById(`stockBar`);\r\n        profilesArray = JSON.parse(localStorage.getItem('Profiles List')) || [];\r\n\r\n        // fetch(`https://financialmodelingprep.com/api/v3/available-traded/list?apikey=7e60778244bbb11a3e59192e565ed625`)\r\n        // .then(response => {\r\n        //     return response.json();\r\n        // }).then(data => {\r\n\r\n        //     data.splice(100);\r\n        //     stockList = [...new Set(data)];\r\n            stockList = JSON.parse(localStorage.getItem('Stock List')) || [];\r\n            console.log('Stock API Data Is:');\r\n            console.log(stockList);\r\n            // localStorage.setItem(`Stock List`, JSON.stringify(stockList));\r\n            profilesArray.shift();\r\n            console.log('Profile List Modded:');\r\n            console.log(profilesArray);\r\n\r\n            stockList.forEach((company, index) => {\r\n                // let profileURL = `https://stock-exchange-dot-full-stack-course-services.ew.r.appspot.com/api/v3/company/profile/${company.symbol}`;\r\n                // fetch(profileURL)\r\n                //     .then((newResponse) => newResponse.json())\r\n                //     .then((profileData) => {\r\n\r\n                //     // Reinitializing Profile Array\r\n                //     profilesArray.push(profileData);\r\n                    profilesArray = JSON.parse(localStorage.getItem('Profiles List')) || [];\r\n                    // localStorage.setItem(`Profiles List`, JSON.stringify(profilesArray));\r\n                    profilesArray.forEach((companyProfile, index) => {\r\n\r\n                        // Begin Profiles Array // Search Results Function\r\n                        // let plus = ``;\r\n                        // let condition = ``;\r\n                        let symbol = companyProfile.symbol;\r\n                        let name = companyProfile.profile.companyName;\r\n                        // let image = companyProfile.profile.image;\r\n                        // let changes = companyProfile.profile.changes;\r\n\r\n                        // Filtering for Price Increase or Decrease\r\n                        // if (changes >= 0) {\r\n                        //     condition = `positive`;\r\n                        //     plus = `+`;\r\n                        // }  else {\r\n                        //     condition = `negative`;\r\n                        // }\r\n                \r\n                        // Creating Rows for Each Company\r\n                        companyRow = document.createElement(`div`);\r\n                        // companyImage = document.createElement(`img`); // Creating Image for Each Company\r\n            \r\n                        // Setting the Attributes of the Company Image\r\n                        // companyImage.setAttribute(`src`, image);\r\n                        // companyImage.setAttribute(`class`, `companyIcon`);\r\n                        // companyImage.setAttribute(`height`, `100px`);\r\n                        // companyImage.setAttribute(`width`, `100px`);\r\n\r\n                        // Setting the Attributes of the Company Rows\r\n                        companyRow.setAttribute(`class`, `companyRow`);\r\n\r\n                        // Creating a New Element to Contain Company Data\r\n                        let companyElement = document.createElement(`a`);\r\n                        companyElement.setAttribute(`href`,`./html/company.html?symbol=${symbol}`);\r\n                        companyElement.setAttribute(`class`,`çompanyElement`);\r\n                        companyElement.setAttribute(`ìd`, index + 1);\r\n                        companyElement.innerHTML = `\r\n                        <span class=\"companyName\">${name}</span> \r\n                        <span class=\"companySymbol\">(${symbol})</span>\r\n                        <span class=\"companyChanges\">Hello</span>`; // Injecting the Elements we Created into the Rows\r\n                        // <span class=\"companyChanges ${condition}\">(${plus}${changes})</span>`; // Injecting the Elements we Created into the Rows\r\n                        // companyRow.prepend(companyImage);\r\n                        companyRow.append(companyElement);\r\n\r\n                        // Returning the Company Row\r\n                        return companyRow;\r\n                        // End Search Results Function\r\n                    });\r\n\r\n                    // Abstracted this code so it only appends rows on full word input\r\n                    stockBar.append(companyRow);\r\n\r\n                    // Image Fixing\r\n                    // const images = document.querySelectorAll(`img`);\r\n                    // images.forEach(image => {\r\n                    //     image.addEventListener(`error`,event => {\r\n                    //         event.target.src=`../img/Stock-Icon-Circle-Icon.svg`;\r\n                    //     })\r\n                    // })\r\n\r\n                    // let searchTerm = 'Hello';\r\n\r\n                    // // Highlighting Searched Text on Company Names\r\n                    // const companyNames = document.querySelectorAll(`.companyName`);\r\n                    // companyNames.forEach(name => {\r\n                    // let filteredCharacters = searchTerm.replace(/[.*+?^${}()|[\\]\\\\]/g,\"\\\\$&\");\r\n                    // let filter = new RegExp(`${filteredCharacters}`,`gi`);\r\n                    // name.innerHTML = name.textContent.replace(filter,match => `<mark>${match}</mark>`);\r\n                    // })\r\n\r\n                    // // Highlighting Searched Text on Company Symbols\r\n                    // const companySymbols = document.querySelectorAll(`.companySymbol`);\r\n                    // companySymbols.forEach(symbol => {\r\n                    // let filteredCharacters = searchTerm.replace(/[.*+?^${}()|[\\]\\\\]/g,\"\\\\$&\");\r\n                    // let filter = new RegExp(`${filteredCharacters}`,`gi`);\r\n                    // symbol.innerHTML = symbol.textContent.replace(filter,match => `<mark>${match}</mark>`);\r\n                    // })\r\n\r\n                // }); // Inner Fetch\r\n\r\n                stockElement = document.createElement(`div`);\r\n                stockElement.setAttribute(`class`,`stockElement`);\r\n\r\n                // Add symbol with a price\r\n                let companyElement = document.createElement(`a`);\r\n                let companyImage = document.createElement(`img`); // Creating Image for Each Company\r\n\r\n                // Setting the Attributes of the Company Image\r\n                companyImage.setAttribute(`src`, company);\r\n                companyImage.setAttribute(`class`, `companyIcon`);\r\n                companyImage.setAttribute(`height`, `100px`);\r\n                companyImage.setAttribute(`width`, `100px`);\r\n                companyElement.setAttribute(`href`,`./html/company.html?symbol=${company.symbol}`);\r\n                companyElement.setAttribute(`class`,`companyElement ${company.symbol}`);\r\n                companyElement.setAttribute(`ìd`, index + 1);\r\n                stockElement.innerHTML = `${company.symbol} <span class=\"positive\"> | (${company.price})</span>`;\r\n                companyElement.append(stockElement);\r\n                stockBar.append(companyElement);\r\n            });\r\n\r\n    });\r\n\r\n    // }) // End Primary Fetch\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"stockBar marquee\" id=\"stockBar\"></div>\r\n        </div>\r\n    );\r\n}\r\n \r\nexport default Stockbar;"]},"metadata":{},"sourceType":"module"}