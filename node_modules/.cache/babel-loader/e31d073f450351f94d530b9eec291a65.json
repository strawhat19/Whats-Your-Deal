{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\massa\\\\OneDrive\\\\Desktop\\\\Coding\\\\Whats-Your-Deal\\\\src\\\\components\\\\StockBar2\\\\stockbar2.jsx\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport \"./sass/stockbar2.css\";\nimport \"./css/customCSS.css\"; // Custom Stock Object\n// class Stock {\n//     constructor(name,symbol) {\n//         this.name = name;\n//         this.symbol = symbol;\n//     }\n//     logInfo() {\n//         Object.values(this).map(value => {\n//             console.log(value);\n//         })\n//     }\n// }\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Stockbar2 extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      loading: true,\n      stocks: [],\n      profiles: JSON.parse(localStorage.getItem(`Profiles List`)) || []\n    };\n  }\n\n  async componentDidMount(stockList, stockBar, stockElement, companyRow, companyImage, profileList) {\n    let profileArray = [];\n    const stockAPIURL = `https://financialmodelingprep.com/api/v3/available-traded/list?limit=100&apikey=7e60778244bbb11a3e59192e565ed625`;\n    const response = await fetch(stockAPIURL);\n    stockList = await response.json();\n    stockList.splice(100);\n    console.log(`Stock Data:`);\n    console.log(stockList);\n    this.setState({\n      stocks: stockList,\n      loading: false\n    });\n    this.setState({\n      profiles: JSON.parse(localStorage.getItem(`Profiles List`)),\n      loading: false\n    });\n    profileArray = JSON.parse(localStorage.getItem(`Profiles List`)) || [];\n    console.log(`Profile Data:`);\n    console.log(profileArray);\n  }\n\n  render() {\n    if (!this.state.stocks.length) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Didnt get Stocks\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 20\n      }, this);\n    }\n\n    if (this.state.loading) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 20\n      }, this);\n    }\n\n    const stockProfileBarRender = this.state.profiles.map((stockProfile, index) => {\n      let emptyString = `Nothing to Show`;\n      let stockProf = stockProfile.profile || emptyString;\n      let name = stockProf.companyName || emptyString;\n      let price = stockProf.price || emptyString;\n      let address = stockProf.address || emptyString;\n      let ceo = stockProf.ceo || emptyString;\n      let changes = stockProf.changes || emptyString;\n      let changesPercentage = stockProf.changesPercentage || emptyString;\n      let country = stockProf.country || emptyString;\n      let currency = stockProf.currency || emptyString;\n      let industry = stockProf.industry || emptyString;\n      let image = stockProf.image || emptyString;\n      let description = stockProf.description || emptyString;\n      let exchange = stockProf.exchange || emptyString;\n      let fullTimeEmployees = stockProf.fullTimeEmployees || emptyString;\n      let sector = stockProf.sector || emptyString;\n      let city = stockProf.city || emptyString;\n      let state = stockProf.state || emptyString;\n      let zip = stockProf.zip || emptyString;\n      console.log(price);\n      console.log(name);\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `companyElement profile-${index} ${stockProfile.symbol}`,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"symbol\",\n          children: stockProfile.symbol\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"price\",\n          children: price\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"picture\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"companyImage\",\n            src: image,\n            alt: \"Company Image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 17\n        }, this)]\n      }, `profile${index}`, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }, this);\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"stockBar\",\n      className: `stockBar`,\n      children: stockProfileBarRender\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/massa/OneDrive/Desktop/Coding/Whats-Your-Deal/src/components/StockBar2/stockbar2.jsx"],"names":["React","ReactDOM","Stockbar2","Component","state","loading","stocks","profiles","JSON","parse","localStorage","getItem","componentDidMount","stockList","stockBar","stockElement","companyRow","companyImage","profileList","profileArray","stockAPIURL","response","fetch","json","splice","console","log","setState","render","length","stockProfileBarRender","map","stockProfile","index","emptyString","stockProf","profile","name","companyName","price","address","ceo","changes","changesPercentage","country","currency","industry","image","description","exchange","fullTimeEmployees","sector","city","zip","symbol"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport \"./sass/stockbar2.css\";\r\nimport \"./css/customCSS.css\";\r\n\r\n// Custom Stock Object\r\n// class Stock {\r\n//     constructor(name,symbol) {\r\n//         this.name = name;\r\n//         this.symbol = symbol;\r\n//     }\r\n\r\n//     logInfo() {\r\n//         Object.values(this).map(value => {\r\n//             console.log(value);\r\n//         })\r\n//     }\r\n// }\r\n\r\nexport default class Stockbar2 extends React.Component {\r\n\r\n    state = {\r\n        loading: true,\r\n        stocks: [],\r\n        profiles: JSON.parse(localStorage.getItem(`Profiles List`)) || []\r\n    }\r\n\r\n    async componentDidMount(stockList, stockBar, stockElement, companyRow, companyImage, profileList) {\r\n\r\n        let profileArray = [];\r\n\r\n        const stockAPIURL = `https://financialmodelingprep.com/api/v3/available-traded/list?limit=100&apikey=7e60778244bbb11a3e59192e565ed625`;\r\n        const response = await fetch(stockAPIURL);\r\n        stockList = await response.json();\r\n        stockList.splice(100);\r\n\r\n        console.log(`Stock Data:`);\r\n        console.log(stockList);\r\n        this.setState({ stocks : stockList, loading: false});\r\n        this.setState({ profiles: JSON.parse(localStorage.getItem(`Profiles List`)), loading: false});\r\n\r\n        profileArray = JSON.parse(localStorage.getItem(`Profiles List`)) || [];\r\n        console.log(`Profile Data:`);\r\n        console.log(profileArray);\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n        if (!this.state.stocks.length) {\r\n            return <div>Didnt get Stocks</div>\r\n        }\r\n        if (this.state.loading) {\r\n            return <div>Loading...</div>\r\n        }\r\n\r\n        const stockProfileBarRender = this.state.profiles.map((stockProfile,index) => {\r\n\r\n            let emptyString = `Nothing to Show`;\r\n            let stockProf = stockProfile.profile || emptyString;\r\n            let name = stockProf.companyName || emptyString;\r\n            let price = stockProf.price || emptyString;\r\n            let address = stockProf.address || emptyString;\r\n            let ceo = stockProf.ceo || emptyString;\r\n            let changes = stockProf.changes || emptyString;\r\n            let changesPercentage = stockProf.changesPercentage || emptyString;\r\n            let country = stockProf.country || emptyString;\r\n            let currency = stockProf.currency || emptyString;\r\n            let industry = stockProf.industry || emptyString;\r\n            let image = stockProf.image || emptyString;\r\n            let description = stockProf.description || emptyString;\r\n            let exchange = stockProf.exchange || emptyString;\r\n            let fullTimeEmployees = stockProf.fullTimeEmployees || emptyString;\r\n            let sector = stockProf.sector || emptyString;\r\n            let city = stockProf.city || emptyString;\r\n            let state = stockProf.state || emptyString;\r\n            let zip = stockProf.zip || emptyString;\r\n\r\n            console.log(price);\r\n            console.log(name);\r\n\r\n            return (\r\n            <div key={`profile${index}`}  className={`companyElement profile-${index} ${stockProfile.symbol}`}>\r\n                <div className=\"symbol\">{stockProfile.symbol}</div>\r\n                <div className=\"price\">{price}</div>\r\n                <div className=\"picture\">\r\n                    <img className=\"companyImage\" src={image} alt=\"Company Image\"></img>\r\n                </div>\r\n            </div>\r\n            )\r\n        });\r\n\r\n        return (\r\n            <div id=\"stockBar\" className={`stockBar`}>\r\n                {stockProfileBarRender}\r\n            </div>\r\n        )\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}